{"ast":null,"code":"var _jsxFileName = \"/Users/navinalang/prototype-mainnet/src/App.js\";\nimport React, { Component } from \"react\";\nimport IndexSwap from \"./abis/IndexSwap.json\";\nimport IndexToken from \"./abis/indexToken.json\";\nimport NFTSwap from \"./abis/NFTPortfolio.json\";\nimport IERC from \"./abis/IERC20.json\";\nimport pancakeSwapRouter from \"./abis/IPancakeRouter02.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Card, Form, Input, Image, Menu, Table } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport velvet from \"./velvet.png\";\nimport metamask from \"./metamask-fox.svg\";\nimport swal from 'sweetalert';\nimport \"./App.css\";\n\nconst axios = require('axios');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.connectWallet = async () => {\n      if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        await window.ethereum.enable();\n        console.log(\"Connected\");\n        this.setState({\n          connected: true\n        });\n      } else {\n        alert(\"Metamask not found\");\n      }\n\n      this.loadBlockchainData();\n      window.location.reload();\n    };\n\n    this.investNFT = async () => {\n      const web3 = new Web3(window.ethereum);\n      const v = this.state.nftToMint;\n      const valueInWei = web3.utils.toWei(v, 'ether');\n      console.log(this.state.NFTPortfolioContract.methods);\n      const resp = await this.state.NFTPortfolioContract.methods.investInFundNFT().send({\n        from: this.state.account,\n        value: valueInWei\n      }).once(\"receipt\", receipt => {\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", \"You invested \".concat(v, \" BNB into the portfolio.\"), \"success\");\n      } else {\n        swal(\"Investment failed!\");\n      }\n\n      this.calcTokenBalancesNFT();\n    };\n\n    this.investDeFi = async () => {\n      const web3 = new Web3(window.ethereum);\n      const v = this.state.defiToMint;\n      const valueInWei = web3.utils.toWei(v, 'ether');\n      const resp = await this.state.SwapContract.methods.investInFundDefi().send({\n        from: this.state.account,\n        value: valueInWei\n      }).once(\"receipt\", receipt => {\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", \"You invested \".concat(v, \" BNB into the portfolio.\"), \"success\"); //window.location.reload();\n      } else {\n        swal(\"Investment failed!\");\n      }\n\n      this.calcTokenBalancesDeFi();\n    };\n\n    this.approveNFTTokens = async () => {\n      const web3 = new Web3(window.ethereum);\n      const contractAddress = \"0x40A367c5320440a1aa78aCBC5af0A017Ed1F3772\";\n      const aXSTokenConntract = new web3.eth.Contract(IERC.abi, \"0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0\");\n      await aXSTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const rACATokenConntract = new web3.eth.Contract(IERC.abi, \"0x12BB890508c125661E03b09EC06E404bc9289040\");\n      await rACATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const mBOXTokenConntract = new web3.eth.Contract(IERC.abi, \"0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377\");\n      await mBOXTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const mCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x949D48EcA67b17269629c7194F4b727d4Ef9E5d6\");\n      await mCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const aLICETokenConntract = new web3.eth.Contract(IERC.abi, \"0xAC51066d7bEC65Dc4589368da368b212745d63E8\");\n      await aLICETokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n    };\n\n    this.approveDeFiTokens = async () => {\n      const web3 = new Web3(window.ethereum);\n      const contractAddress = \"0x380d2b6742AAD7ae97f199a109c1F81A34E1cb86\";\n      const BTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c\");\n      BTCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const ETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\");\n      ETHTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const SHIBATokenConntract = new web3.eth.Contract(IERC.abi, \"0x2859e4544C4bB03966803b044A93563Bd2D0DD4D\");\n      SHIBATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const XRPTokenConntract = new web3.eth.Contract(IERC.abi, \"0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE\");\n      XRPTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const LTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x4338665CBB7B2485A8855A139b75D5e34AB0DB94\");\n      LTCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const DAITokenConntract = new web3.eth.Contract(IERC.abi, \"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3\");\n      DAITokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const MAKERTokenConntract = new web3.eth.Contract(IERC.abi, \"0x5f0Da599BB2ccCfcf6Fdfd7D81743B6020864350\");\n      MAKERTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const LINKTokenConntract = new web3.eth.Contract(IERC.abi, \"0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD\");\n      LINKTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const UNITokenConntract = new web3.eth.Contract(IERC.abi, \"0xBf5140A22578168FD562DCcF235E5D43A02ce9B1\");\n      UNITokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const AAVETokenConntract = new web3.eth.Contract(IERC.abi, \"0xfb6115445Bff7b52FeB98650C87f44907E58f802\");\n      AAVETokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n    };\n\n    this.withdrawDeFi = async () => {\n      const vault = \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\";\n      const web3 = new Web3(window.ethereum);\n      var withdrawAmt = this.state.withdrawValueDefi;\n      var withdrawAmountInWei = web3.utils.toWei(withdrawAmt, 'ether');\n      await this.state.DeFiTokenContract.methods.approve(\"0x380d2b6742AAD7ae97f199a109c1F81A34E1cb86\", \"7787357773333787487837458347754874574837458374\").send({\n        from: this.state.account\n      });\n      var amount = withdrawAmountInWei / 10;\n      var sAmount = amount.toString();\n      await this.state.SwapContract.methods.withdrawFromFundTOPTokens(sAmount).send({\n        from: this.state.account,\n        value: 0\n      }).once(\"receipt\", receipt => {\n        swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n      this.calcTokenBalancesDeFi();\n    };\n\n    this.withdrawNFT = async () => {\n      const vault = \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\";\n      const web3 = new Web3(window.ethereum);\n      console.log(this.state.DeFiTokenContract);\n      var withdrawAmt = this.state.withdrawValueNFT;\n      var withdrawAmountInWei = web3.utils.toWei(withdrawAmt, 'ether');\n      await this.state.NFTTokenContract.methods.approve(\"0x40A367c5320440a1aa78aCBC5af0A017Ed1F3772\", \"7787357773333787487837458347754874574837458374\").send({\n        from: this.state.account\n      });\n      var amount = withdrawAmountInWei / 10;\n      var sAmount = amount.toString();\n      await this.state.NFTPortfolioContract.methods.withdrawFromFundNFT(sAmount).send({\n        from: this.state.account,\n        value: 0\n      }).once(\"receipt\", receipt => {\n        swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n      this.calcTokenBalancesNFT();\n    };\n\n    this.getExchangeRate = async (amountIn, address) => {\n      const web3 = window.web3;\n      const pancakeRouter = new web3.eth.Contract(pancakeSwapRouter.abi, \"0x10ED43C718714eb63d5aA57B78B54704E256024E\");\n      var path = [];\n      path[0] = address;\n      path[1] = \"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\";\n      const er = await pancakeRouter.methods.getAmountsOut(amountIn, path).call();\n      return er[1];\n    };\n\n    this.calcTokenBalancesDeFi = async () => {\n      const web3 = window.web3;\n      const nftTokenBalanceRes = await this.state.NFTTokenContract.methods.balanceOf(this.state.account).call();\n      const nftTokenBalance = web3.utils.fromWei(nftTokenBalanceRes, \"ether\");\n      const defiTokenBalanceRes = await this.state.DeFiTokenContract.methods.balanceOf(this.state.account).call();\n      const defiTokenBalance = web3.utils.fromWei(defiTokenBalanceRes, \"ether\"); // DeFi\n\n      const BTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c\");\n      const btcTokenBalanceRes = await this.state.SwapContract.methods.btcBalance(this.state.account).call(); //const btcTokenBalanceRes = await BTCTokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n\n      const helperBtc = await this.getExchangeRateMainnet(btcTokenBalanceRes, \"0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c\");\n      const btcTokenBalanceBnb = web3.utils.fromWei(helperBtc, \"ether\");\n      const btcTokenBalance = web3.utils.fromWei(btcTokenBalanceRes, \"ether\");\n      const ETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\");\n      const ethTokenBalanceRes = await this.state.SwapContract.methods.ethBalance(this.state.account).call(); //const ethTokenBalanceRes = await ETHTokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n\n      const helperEth = await this.getExchangeRateMainnet(ethTokenBalanceRes, \"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\");\n      const ethTokenBalanceBnb = web3.utils.fromWei(helperEth, \"ether\");\n      const ethTokenBalance = web3.utils.fromWei(ethTokenBalanceRes, \"ether\");\n      const SHIBATokenConntract = new web3.eth.Contract(IERC.abi, \"0x2859e4544C4bB03966803b044A93563Bd2D0DD4D\");\n      const shibaTokenBalanceRes = await this.state.SwapContract.methods.shibaBalance(this.state.account).call(); //const shibaTokenBalanceRes = await SHIBATokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n\n      const helperShib = await this.getExchangeRateMainnet(shibaTokenBalanceRes, \"0x2859e4544C4bB03966803b044A93563Bd2D0DD4D\");\n      const shibaTokenBalanceBnb = web3.utils.fromWei(helperShib, \"ether\");\n      const shibaTokenBalance = web3.utils.fromWei(shibaTokenBalanceRes, \"ether\");\n      const XRPTokenConntract = new web3.eth.Contract(IERC.abi, \"0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE\");\n      const xrpTokenBalanceRes = await this.state.SwapContract.methods.xrpBalance(this.state.account).call(); //const xrpTokenBalanceRes = await XRPTokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n\n      const helperXrp = await this.getExchangeRateMainnet(xrpTokenBalanceRes, \"0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE\");\n      const xrpTokenBalanceBnb = web3.utils.fromWei(helperXrp, \"ether\");\n      const xrpTokenBalance = web3.utils.fromWei(xrpTokenBalanceRes, \"ether\");\n      const LTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x4338665CBB7B2485A8855A139b75D5e34AB0DB94\");\n      const ltcTokenBalanceRes = await this.state.SwapContract.methods.ltcBalance(this.state.account).call(); //const ltcTokenBalanceRes = await LTCTokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n\n      const helperLtc = await this.getExchangeRateMainnet(ltcTokenBalanceRes, \"0x4338665CBB7B2485A8855A139b75D5e34AB0DB94\");\n      const ltcTokenBalanceBnb = web3.utils.fromWei(helperLtc, \"ether\");\n      const ltcTokenBalance = web3.utils.fromWei(ltcTokenBalanceRes, \"ether\");\n      const DAITokenConntract = new web3.eth.Contract(IERC.abi, \"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3\");\n      const daiTokenBalanceRes = await this.state.SwapContract.methods.daiBalance(this.state.account).call(); //const daiTokenBalanceRes = await DAITokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n\n      const helperDai = await this.getExchangeRateMainnet(daiTokenBalanceRes, \"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3\");\n      const daiTokenBalanceBnb = web3.utils.fromWei(helperDai, \"ether\");\n      const daiTokenBalance = web3.utils.fromWei(daiTokenBalanceRes, \"ether\");\n      const MAKERTokenConntract = new web3.eth.Contract(IERC.abi, \"0x5f0Da599BB2ccCfcf6Fdfd7D81743B6020864350\");\n      const makerTokenBalanceRes = await this.state.SwapContract.methods.makerBalance(this.state.account).call(); //const makerTokenBalanceRes = await MAKERTokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n\n      const helperMaker = await this.getExchangeRateMainnet(makerTokenBalanceRes, \"0x5f0Da599BB2ccCfcf6Fdfd7D81743B6020864350\");\n      const makerTokenBalanceBnb = web3.utils.fromWei(helperMaker, \"ether\");\n      const makerTokenBalance = web3.utils.fromWei(makerTokenBalanceRes, \"ether\");\n      const LINKTokenConntract = new web3.eth.Contract(IERC.abi, \"0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD\");\n      const linkTokenBalanceRes = await this.state.SwapContract.methods.linkBalance(this.state.account).call(); //const linkTokenBalanceRes = await LINKTokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n\n      const helperLink = await this.getExchangeRateMainnet(linkTokenBalanceRes, \"0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD\");\n      const linkTokenBalanceBnb = web3.utils.fromWei(helperLink, \"ether\");\n      const linkTokenBalance = web3.utils.fromWei(linkTokenBalanceRes, \"ether\");\n      const UNITokenConntract = new web3.eth.Contract(IERC.abi, \"0xBf5140A22578168FD562DCcF235E5D43A02ce9B1\");\n      const uniTokenBalanceRes = await this.state.SwapContract.methods.uniBalance(this.state.account).call(); //const uniTokenBalanceRes = await UNITokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n\n      const helperUni = await this.getExchangeRateMainnet(uniTokenBalanceRes, \"0xBf5140A22578168FD562DCcF235E5D43A02ce9B1\");\n      const uniTokenBalanceBnb = web3.utils.fromWei(helperUni, \"ether\");\n      const uniTokenBalance = web3.utils.fromWei(uniTokenBalanceRes, \"ether\");\n      const AAVETokenConntract = new web3.eth.Contract(IERC.abi, \"0xfb6115445Bff7b52FeB98650C87f44907E58f802\");\n      const aaveTokenBalanceRes = await this.state.SwapContract.methods.aaveBalance(this.state.account).call(); //const aaveTokenBalanceRes = await AAVETokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n\n      const helperAave = await this.getExchangeRateMainnet(aaveTokenBalanceRes, \"0xfb6115445Bff7b52FeB98650C87f44907E58f802\");\n      const aaveTokenBalanceBnb = web3.utils.fromWei(helperAave, \"ether\");\n      const aaveTokenBalance = web3.utils.fromWei(aaveTokenBalanceRes, \"ether\");\n      this.setState({\n        defiTokenBalance,\n        btcTokenBalance,\n        ethTokenBalance,\n        shibaTokenBalance,\n        xrpTokenBalance,\n        ltcTokenBalance,\n        btcTokenBalanceBnb,\n        ethTokenBalanceBnb,\n        shibaTokenBalanceBnb,\n        xrpTokenBalanceBnb,\n        ltcTokenBalanceBnb,\n        daiTokenBalance,\n        makerTokenBalance,\n        linkTokenBalance,\n        uniTokenBalance,\n        aaveTokenBalance,\n        daiTokenBalanceBnb,\n        makerTokenBalanceBnb,\n        linkTokenBalanceBnb,\n        uniTokenBalanceBnb,\n        aaveTokenBalanceBnb\n      });\n    };\n\n    this.calcTokenBalancesNFT = async () => {\n      // NFT\n      const web3 = window.web3;\n      const nftTokenBalanceRes = await this.state.NFTTokenContract.methods.balanceOf(this.state.account).call();\n      const nftTokenBalance = web3.utils.fromWei(nftTokenBalanceRes, \"ether\");\n      const AXSTokenConntract = new web3.eth.Contract(IERC.abi, \"0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0\");\n      const axsTokenBalanceRes = await this.state.NFTPortfolioContract.methods.axsBalance(this.state.account).call(); //const axsTokenBalanceRes = await AXSTokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n\n      const helperAxs = await this.getExchangeRateMainnet(axsTokenBalanceRes, \"0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0\");\n      const axsTokenBalanceBnb = web3.utils.fromWei(helperAxs, \"ether\");\n      const axsTokenBalance = web3.utils.fromWei(axsTokenBalanceRes, \"ether\");\n      const RACATokenConntract = new web3.eth.Contract(IERC.abi, \"0x12BB890508c125661E03b09EC06E404bc9289040\");\n      const racaTokenBalanceRes = await this.state.NFTPortfolioContract.methods.racaBalance(this.state.account).call(); //const racaTokenBalanceRes = await RACATokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n\n      const helperRaca = await this.getExchangeRateMainnet(racaTokenBalanceRes, \"0x12BB890508c125661E03b09EC06E404bc9289040\");\n      const racaTokenBalanceBnb = web3.utils.fromWei(helperRaca, \"ether\");\n      const racaTokenBalance = web3.utils.fromWei(racaTokenBalanceRes, \"ether\");\n      const MBOXTokenConntract = new web3.eth.Contract(IERC.abi, \"0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377\");\n      const mboxTokenBalanceRes = await this.state.NFTPortfolioContract.methods.mboxBalance(this.state.account).call(); //const mboxTokenBalanceRes = await MBOXTokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n\n      const helperMbox = await this.getExchangeRateMainnet(mboxTokenBalanceRes, \"0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377\");\n      const mboxTokenBalanceBnb = web3.utils.fromWei(helperMbox, \"ether\");\n      const mboxTokenBalance = web3.utils.fromWei(mboxTokenBalanceRes, \"ether\");\n      const MCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x949D48EcA67b17269629c7194F4b727d4Ef9E5d6\");\n      const mcTokenBalanceRes = await this.state.NFTPortfolioContract.methods.mcBalance(this.state.account).call(); //const mcTokenBalanceRes = await MCTokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n\n      const helperMc = await this.getExchangeRateMainnet(mcTokenBalanceRes, \"0x949D48EcA67b17269629c7194F4b727d4Ef9E5d6\");\n      const mcTokenBalanceBnb = web3.utils.fromWei(helperMc, \"ether\");\n      const mcTokenBalance = web3.utils.fromWei(mcTokenBalanceRes, \"ether\");\n      const ALICETokenConntract = new web3.eth.Contract(IERC.abi, \"0xAC51066d7bEC65Dc4589368da368b212745d63E8\");\n      const aliceTokenBalanceRes = await this.state.NFTPortfolioContract.methods.aliceBalance(this.state.account).call(); //const aliceTokenBalanceRes = await ALICETokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n\n      const helperAlice = await this.getExchangeRateMainnet(aliceTokenBalanceRes, \"0xAC51066d7bEC65Dc4589368da368b212745d63E8\");\n      const aliceTokenBalanceBnb = web3.utils.fromWei(helperAlice, \"ether\");\n      const aliceTokenBalance = web3.utils.fromWei(aliceTokenBalanceRes, \"ether\");\n      this.setState({\n        nftTokenBalance,\n        axsTokenBalance,\n        racaTokenBalance,\n        mboxTokenBalance,\n        mcTokenBalance,\n        aliceTokenBalance,\n        axsTokenBalanceBnb,\n        racaTokenBalanceBnb,\n        mboxTokenBalanceBnb,\n        mcTokenBalanceBnb,\n        aliceTokenBalanceBnb\n      });\n    };\n\n    this.getRate = async () => {\n      const rateObj = await this.state.SwapContract.methods.currentRate().call();\n      const rate = rateObj.numerator / rateObj.denominator;\n      this.setState({\n        rate\n      });\n    };\n\n    this.state = {\n      account: '',\n      SwapContract: null,\n      NFTTokenContract: null,\n      DeFiTokenContract: null,\n      NFTPortfolioContract: null,\n      address: \"\",\n      connected: false,\n      mapDefi: [],\n      mapNft: [],\n      defiToMint: 0,\n      nftToMint: 0,\n      withdrawValueDefi: 0,\n      withdrawValueNFT: 0,\n      defiBalance: 0,\n      nftBalance: 0,\n      nftTokenBalance: 0,\n      defiTokenBalance: 0,\n      btcTokenBalance: 0,\n      ethTokenBalance: 0,\n      shibaTokenBalance: 0,\n      xrpTokenBalance: 0,\n      ltcTokenBalance: 0,\n      daiTokenBalance: 0,\n      makerTokenBalance: 0,\n      linkTokenBalance: 0,\n      uniTokenBalance: 0,\n      aaveTokenBalance: 0,\n      btcTokenBalanceBnb: 0,\n      ethTokenBalanceBnb: 0,\n      shibaTokenBalanceBnb: 0,\n      xrpTokenBalanceBnb: 0,\n      ltcTokenBalanceBnb: 0,\n      daiTokenBalanceBnb: 0,\n      makerTokenBalanceBnb: 0,\n      linkTokenBalanceBnb: 0,\n      uniTokenBalanceBnb: 0,\n      aaveTokenBalanceBnb: 0,\n      axsTokenBalance: 0,\n      racaTokenBalance: 0,\n      mboxTokenBalance: 0,\n      mcTokenBalance: 0,\n      aliceTokenBalance: 0,\n      xtzTokenBalance: 0,\n      galaTokenBalance: 0,\n      chzTokenBalance: 0,\n      enjTokenBalance: 0,\n      roseTokenBalance: 0,\n      axsTokenBalanceBnb: 0,\n      racaTokenBalanceBnb: 0,\n      mboxTokenBalanceBnb: 0,\n      mcTokenBalanceBnb: 0,\n      aliceTokenBalanceBnb: 0,\n      xtzTokenBalanceBnb: 0,\n      galaTokenBalanceBnb: 0,\n      chzTokenBalanceBnb: 0,\n      enjTokenBalanceBnb: 0,\n      roseTokenBalanceBnb: 0,\n      rate: 0\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n    await this.calcTokenBalancesDeFi();\n    await this.calcTokenBalancesNFT();\n    await this.getRate();\n    swal(\"This project is is beta stage\");\n  } // first up is to detect ethereum provider\n\n\n  async loadWeb3() {\n    const provider = await detectEthereumProvider(); // modern browsers\n\n    if (provider) {\n      console.log('MetaMask is connected');\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await window.web3.eth.getAccounts();\n\n    if (accounts[0]) {\n      this.setState({\n        connected: true\n      });\n    }\n\n    this.setState({\n      account: accounts[0]\n    });\n    const SwapContract = new web3.eth.Contract(IndexSwap.abi, \"0x380d2b6742AAD7ae97f199a109c1F81A34E1cb86\");\n    const NFTPortfolioContract = new web3.eth.Contract(NFTSwap.abi, \"0x40A367c5320440a1aa78aCBC5af0A017Ed1F3772\");\n    const NFTTokenContract = new web3.eth.Contract(IndexToken.abi, \"0x16dBB234A9a595967DdC2ea1bb53379752f09Ad4\");\n    const DeFiTokenContract = new web3.eth.Contract(IndexToken.abi, \"0x6E49456f284e3da7f1515eEE120E2706cab69fD5\");\n    this.setState({\n      SwapContract,\n      DeFiTokenContract,\n      NFTPortfolioContract,\n      NFTTokenContract\n    });\n  }\n\n  render() {\n    let button;\n\n    if (!this.state.connected) {\n      button = React.createElement(Button, {\n        style: {\n          position: \"absolute\",\n          top: \"30px\",\n          right: \"20px\"\n        },\n        onClick: this.connectWallet,\n        color: \"orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, React.createElement(Image, {\n        style: {\n          \"padding-top\": \"7px\"\n        },\n        floated: \"left\",\n        size: \"mini\",\n        src: metamask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }, \"Connect to MetaMask\"));\n    } else {\n      button = React.createElement(\"p\", {\n        style: {\n          position: \"absolute\",\n          top: \"90px\",\n          right: \"20px\",\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }, \"Account:\"), \" \", this.state.account);\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }), React.createElement(Image, {\n      src: velvet,\n      size: \"medium\",\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }), button, React.createElement(Grid, {\n      divided: \"vertically\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      columns: 2,\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"900px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      style: {\n        background: \"#406ccd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: \"#C0C0C0\",\n        \"font-weight\": \"bold\",\n        \"text-align\": \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }, \"APY: 12%\"), \"Top 10 Tokens\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, \"Rate: In return of investing 1 BNB you will receive 1 Top10 Token.\"), React.createElement(Form, {\n      onSubmit: this.investDeFi,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"300px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"BNB amount to create\",\n      name: \"defiToMint\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\",\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }, \"Create\")), React.createElement(Form, {\n      onSubmit: this.withdrawDeFi,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"300px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"TOP15 amount to redeem\",\n      name: \"withdrawValueDefi\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      style: {\n        margin: \"20px\",\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    }, \"Redeem\")), React.createElement(Table, {\n      role: \"grid\",\n      style: {\n        \"margin-left\": \"auto\",\n        \"margin-right\": \"auto\"\n      },\n      basic: \"very\",\n      celled: true,\n      collapsing: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }, \"Token\"), React.createElement(Table.HeaderCell, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    }, \"Balance\"), React.createElement(Table.HeaderCell, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    }, \"Balance in BUSD\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534\n      },\n      __self: this\n    }, \"Top10 Token\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }, this.state.defiTokenBalance), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    }, this.state.defiTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }, \"Bitcoin (BTC)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }, this.state.btcTokenBalance), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    }, this.state.btcTokenBalanceBnb)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    }, \"Ethereum (ETH)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545\n      },\n      __self: this\n    }, this.state.ethTokenBalance), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546\n      },\n      __self: this\n    }, this.state.ethTokenBalanceBnb)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    }, \"Shiba Ibu (SHIB)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    }, this.state.shibaTokenBalance), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }, this.state.shibaTokenBalanceBnb)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    }, \"Ripple (XRP)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }, this.state.xrpTokenBalance), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    }, this.state.xrpTokenBalanceBnb)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559\n      },\n      __self: this\n    }, \"Litecoin (LTC)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560\n      },\n      __self: this\n    }, this.state.ltcTokenBalance), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }, this.state.ltcTokenBalanceBnb)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }, \"Dai (DAI)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565\n      },\n      __self: this\n    }, this.state.daiTokenBalance), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566\n      },\n      __self: this\n    }, this.state.daiTokenBalanceBnb)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    }, \"Maker (MKR)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    }, this.state.makerTokenBalance), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571\n      },\n      __self: this\n    }, this.state.makerTokenBalanceBnb)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }, \"Chainlink (LINK)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    }, this.state.linkTokenBalance), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576\n      },\n      __self: this\n    }, this.state.linkTokenBalanceBnb)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579\n      },\n      __self: this\n    }, \"Uniswap (UNI)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580\n      },\n      __self: this\n    }, this.state.uniTokenBalance), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    }, this.state.uniTokenBalanceBnb)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584\n      },\n      __self: this\n    }, \"Aave (AAVE)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585\n      },\n      __self: this\n    }, this.state.aaveTokenBalance), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586\n      },\n      __self: this\n    }, this.state.aaveTokenBalanceBnb))))))))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"900px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      style: {\n        background: \"#406ccd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: \"#C0C0C0\",\n        \"font-weight\": \"bold\",\n        \"text-align\": \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    }, \"APY: 8%\"), \"Top 5 Metaverse Tokens\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608\n      },\n      __self: this\n    }, \"Rate: In return of investing 1 BNB you will receive 1 META Token.\"), React.createElement(Form, {\n      onSubmit: this.investNFT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"300px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"BNB amount to create\",\n      name: \"nftToMint\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\",\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612\n      },\n      __self: this\n    }, \"Create\")), React.createElement(Form, {\n      onSubmit: this.withdrawNFT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"300px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"META amount to redeem\",\n      name: \"withdrawValueNFT\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      style: {\n        margin: \"20px\",\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617\n      },\n      __self: this\n    }, \"Redeem\")), React.createElement(Table, {\n      style: {\n        \"margin-left\": \"auto\",\n        \"margin-right\": \"auto\"\n      },\n      basic: \"very\",\n      celled: true,\n      collapsing: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623\n      },\n      __self: this\n    }, \"Token\"), React.createElement(Table.HeaderCell, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624\n      },\n      __self: this\n    }, \"Balance\"), React.createElement(Table.HeaderCell, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625\n      },\n      __self: this\n    }, \"Balance in BUSD\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631\n      },\n      __self: this\n    }, \"Metaverse Token\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632\n      },\n      __self: this\n    }, this.state.nftTokenBalance), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633\n      },\n      __self: this\n    }, this.state.nftTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636\n      },\n      __self: this\n    }, \"Axie Infinity (AXS)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637\n      },\n      __self: this\n    }, this.state.axsTokenBalance), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638\n      },\n      __self: this\n    }, this.state.axsTokenBalanceBnb)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641\n      },\n      __self: this\n    }, \"Radio Caca (RACA)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642\n      },\n      __self: this\n    }, this.state.racaTokenBalance), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643\n      },\n      __self: this\n    }, this.state.racaTokenBalanceBnb)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646\n      },\n      __self: this\n    }, \"MOBOX (MBOX)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647\n      },\n      __self: this\n    }, this.state.mboxTokenBalance), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648\n      },\n      __self: this\n    }, this.state.mboxTokenBalanceBnb)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651\n      },\n      __self: this\n    }, \"Merit Circle (MC)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652\n      },\n      __self: this\n    }, this.state.mcTokenBalance), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653\n      },\n      __self: this\n    }, this.state.mcTokenBalanceBnb)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656\n      },\n      __self: this\n    }, \"MyNeighborAlice (ALICE)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657\n      },\n      __self: this\n    }, this.state.aliceTokenBalance), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658\n      },\n      __self: this\n    }, this.state.aliceTokenBalanceBnb))))))))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/navinalang/prototype-mainnet/src/App.js"],"names":["React","Component","IndexSwap","IndexToken","NFTSwap","IERC","pancakeSwapRouter","detectEthereumProvider","Web3","Grid","Button","Card","Form","Input","Image","Menu","Table","velvet","swal","axios","require","App","constructor","props","handleInputChange","event","target","value","type","checked","name","setState","connectWallet","window","ethereum","web3","enable","console","log","connected","alert","loadBlockchainData","location","reload","investNFT","v","state","nftToMint","valueInWei","utils","toWei","NFTPortfolioContract","methods","resp","investInFundNFT","send","from","account","once","receipt","catch","err","status","calcTokenBalancesNFT","investDeFi","defiToMint","SwapContract","investInFundDefi","calcTokenBalancesDeFi","approveNFTTokens","contractAddress","aXSTokenConntract","eth","Contract","abi","approve","rACATokenConntract","mBOXTokenConntract","mCTokenConntract","aLICETokenConntract","approveDeFiTokens","BTCTokenConntract","ETHTokenConntract","SHIBATokenConntract","XRPTokenConntract","LTCTokenConntract","DAITokenConntract","MAKERTokenConntract","LINKTokenConntract","UNITokenConntract","AAVETokenConntract","withdrawDeFi","vault","withdrawAmt","withdrawValueDefi","withdrawAmountInWei","DeFiTokenContract","amount","sAmount","toString","withdrawFromFundTOPTokens","withdrawNFT","withdrawValueNFT","NFTTokenContract","withdrawFromFundNFT","getExchangeRate","amountIn","address","pancakeRouter","path","er","getAmountsOut","call","nftTokenBalanceRes","balanceOf","nftTokenBalance","fromWei","defiTokenBalanceRes","defiTokenBalance","btcTokenBalanceRes","btcBalance","helperBtc","getExchangeRateMainnet","btcTokenBalanceBnb","btcTokenBalance","ethTokenBalanceRes","ethBalance","helperEth","ethTokenBalanceBnb","ethTokenBalance","shibaTokenBalanceRes","shibaBalance","helperShib","shibaTokenBalanceBnb","shibaTokenBalance","xrpTokenBalanceRes","xrpBalance","helperXrp","xrpTokenBalanceBnb","xrpTokenBalance","ltcTokenBalanceRes","ltcBalance","helperLtc","ltcTokenBalanceBnb","ltcTokenBalance","daiTokenBalanceRes","daiBalance","helperDai","daiTokenBalanceBnb","daiTokenBalance","makerTokenBalanceRes","makerBalance","helperMaker","makerTokenBalanceBnb","makerTokenBalance","linkTokenBalanceRes","linkBalance","helperLink","linkTokenBalanceBnb","linkTokenBalance","uniTokenBalanceRes","uniBalance","helperUni","uniTokenBalanceBnb","uniTokenBalance","aaveTokenBalanceRes","aaveBalance","helperAave","aaveTokenBalanceBnb","aaveTokenBalance","AXSTokenConntract","axsTokenBalanceRes","axsBalance","helperAxs","axsTokenBalanceBnb","axsTokenBalance","RACATokenConntract","racaTokenBalanceRes","racaBalance","helperRaca","racaTokenBalanceBnb","racaTokenBalance","MBOXTokenConntract","mboxTokenBalanceRes","mboxBalance","helperMbox","mboxTokenBalanceBnb","mboxTokenBalance","MCTokenConntract","mcTokenBalanceRes","mcBalance","helperMc","mcTokenBalanceBnb","mcTokenBalance","ALICETokenConntract","aliceTokenBalanceRes","aliceBalance","helperAlice","aliceTokenBalanceBnb","aliceTokenBalance","getRate","rateObj","currentRate","rate","numerator","denominator","mapDefi","mapNft","defiBalance","nftBalance","xtzTokenBalance","galaTokenBalance","chzTokenBalance","enjTokenBalance","roseTokenBalance","xtzTokenBalanceBnb","galaTokenBalanceBnb","chzTokenBalanceBnb","enjTokenBalanceBnb","roseTokenBalanceBnb","componentDidMount","loadWeb3","provider","accounts","getAccounts","render","button","position","top","right","metamask","color","margin","width","background","padding"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,IAA7B,EAAmCC,KAAnC,EAA0CC,KAA1C,EAAiDC,IAAjD,EAAuDC,KAAvD,QAAoE,mBAApE;AACA,OAAO,kCAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AAEA,OAAO,WAAP;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,GAAN,SAAkBpB,SAAlB,CAA4B;AAE1BqB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA8GnBC,iBA9GmB,GA8GEC,KAAD,IAAW;AAC7B,YAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,YAAMC,KAAK,GAAGD,MAAM,CAACE,IAAP,KAAgB,UAAhB,GAA6BF,MAAM,CAACG,OAApC,GAA8CH,MAAM,CAACC,KAAnE;AACA,YAAMG,IAAI,GAAGJ,MAAM,CAACI,IAApB;AACA,WAAKC,QAAL,CAAc;AACZ,SAACD,IAAD,GAAQH;AADI,OAAd;AAGD,KArHkB;;AAAA,SAuHnBK,aAvHmB,GAuHH,YAAY;AAC1B,UAAIC,MAAM,CAACC,QAAX,EAAqB;AACnBD,QAAAA,MAAM,CAACE,IAAP,GAAc,IAAI3B,IAAJ,CAASyB,MAAM,CAACC,QAAhB,CAAd;AACA,cAAMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,EAAN;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,aAAKP,QAAL,CAAc;AACZQ,UAAAA,SAAS,EAAE;AADC,SAAd;AAID,OARD,MAQO;AACLC,QAAAA,KAAK,CAAC,oBAAD,CAAL;AACD;;AAED,WAAKC,kBAAL;AACAR,MAAAA,MAAM,CAACS,QAAP,CAAgBC,MAAhB;AACD,KAtIkB;;AAAA,SAwInBC,SAxImB,GAwIP,YAAY;AACtB,YAAMT,IAAI,GAAG,IAAI3B,IAAJ,CAASyB,MAAM,CAACC,QAAhB,CAAb;AACA,YAAMW,CAAC,GAAG,KAAKC,KAAL,CAAWC,SAArB;AACA,YAAMC,UAAU,GAAGb,IAAI,CAACc,KAAL,CAAWC,KAAX,CAAiBL,CAAjB,EAAoB,OAApB,CAAnB;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKQ,KAAL,CAAWK,oBAAX,CAAgCC,OAA5C;AAEA,YAAMC,IAAI,GAAG,MAAM,KAAKP,KAAL,CAAWK,oBAAX,CAAgCC,OAAhC,CAAwCE,eAAxC,GAA0DC,IAA1D,CAA+D;AAAEC,QAAAA,IAAI,EAAE,KAAKV,KAAL,CAAWW,OAAnB;AAA4B9B,QAAAA,KAAK,EAAEqB;AAAnC,OAA/D,EAChBU,IADgB,CACX,SADW,EACCC,OAAD,IAAa;AAC9BtB,QAAAA,OAAO,CAACC,GAAR,CAAYqB,OAAZ;AACD,OAHkB,EAIhBC,KAJgB,CAITC,GAAD,IAAS;AACdxB,QAAAA,OAAO,CAACC,GAAR,CAAYuB,GAAZ;AACD,OANgB,CAAnB;;AAOA,UAAIR,IAAI,CAACS,MAAT,EAAiB;AACf5C,QAAAA,IAAI,CAAC,yBAAD,yBAA4C2B,CAA5C,+BAAyE,SAAzE,CAAJ;AACD,OAFD,MAEO;AACL3B,QAAAA,IAAI,CAAC,oBAAD,CAAJ;AACD;;AAED,WAAK6C,oBAAL;AACD,KA5JkB;;AAAA,SA8JnBC,UA9JmB,GA8JN,YAAY;AACvB,YAAM7B,IAAI,GAAG,IAAI3B,IAAJ,CAASyB,MAAM,CAACC,QAAhB,CAAb;AACA,YAAMW,CAAC,GAAG,KAAKC,KAAL,CAAWmB,UAArB;AACA,YAAMjB,UAAU,GAAGb,IAAI,CAACc,KAAL,CAAWC,KAAX,CAAiBL,CAAjB,EAAoB,OAApB,CAAnB;AAEA,YAAMQ,IAAI,GAAG,MAAM,KAAKP,KAAL,CAAWoB,YAAX,CAAwBd,OAAxB,CAAgCe,gBAAhC,GAAmDZ,IAAnD,CAAwD;AAAEC,QAAAA,IAAI,EAAE,KAAKV,KAAL,CAAWW,OAAnB;AAA4B9B,QAAAA,KAAK,EAAEqB;AAAnC,OAAxD,EAClBU,IADkB,CACb,SADa,EACDC,OAAD,IAAa;AAC5BtB,QAAAA,OAAO,CAACC,GAAR,CAAYqB,OAAZ;AAED,OAJkB,EAKhBC,KALgB,CAKTC,GAAD,IAAS;AACdxB,QAAAA,OAAO,CAACC,GAAR,CAAYuB,GAAZ;AACD,OAPgB,CAAnB;;AASE,UAAIR,IAAI,CAACS,MAAT,EAAiB;AACf5C,QAAAA,IAAI,CAAC,yBAAD,yBAA4C2B,CAA5C,+BAAyE,SAAzE,CAAJ,CADe,CAEf;AACD,OAHD,MAGO;AACL3B,QAAAA,IAAI,CAAC,oBAAD,CAAJ;AACD;;AAEH,WAAKkD,qBAAL;AAED,KArLkB;;AAAA,SAuLnBC,gBAvLmB,GAuLA,YAAW;AAC5B,YAAMlC,IAAI,GAAG,IAAI3B,IAAJ,CAASyB,MAAM,CAACC,QAAhB,CAAb;AAEA,YAAMoC,eAAe,GAAG,4CAAxB;AAEA,YAAMC,iBAAiB,GAAG,IAAIpC,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA1B;AACA,YAAMH,iBAAiB,CAACnB,OAAlB,CAA0BuB,OAA1B,CAAkCL,eAAlC,EAAmD,gFAAnD,EAAqIf,IAArI,CAA0I;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA1I,CAAN;AAEA,YAAMoB,kBAAkB,GAAG,IAAIzC,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA3B;AACA,YAAME,kBAAkB,CAACxB,OAAnB,CAA2BuB,OAA3B,CAAmCL,eAAnC,EAAoD,gFAApD,EAAsIf,IAAtI,CAA2I;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA3I,CAAN;AAEA,YAAMqB,kBAAkB,GAAG,IAAI1C,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA3B;AACA,YAAMG,kBAAkB,CAACzB,OAAnB,CAA2BuB,OAA3B,CAAmCL,eAAnC,EAAoD,gFAApD,EAAsIf,IAAtI,CAA2I;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA3I,CAAN;AAEA,YAAMsB,gBAAgB,GAAG,IAAI3C,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAAzB;AACA,YAAMI,gBAAgB,CAAC1B,OAAjB,CAAyBuB,OAAzB,CAAiCL,eAAjC,EAAkD,gFAAlD,EAAoIf,IAApI,CAAyI;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAzI,CAAN;AAEA,YAAMuB,mBAAmB,GAAG,IAAI5C,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA5B;AACA,YAAMK,mBAAmB,CAAC3B,OAApB,CAA4BuB,OAA5B,CAAoCL,eAApC,EAAqD,gFAArD,EAAuIf,IAAvI,CAA4I;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA5I,CAAN;AACD,KA1MkB;;AAAA,SA4MnBwB,iBA5MmB,GA4MC,YAAW;AAC7B,YAAM7C,IAAI,GAAG,IAAI3B,IAAJ,CAASyB,MAAM,CAACC,QAAhB,CAAb;AAEA,YAAMoC,eAAe,GAAG,4CAAxB;AAEA,YAAMW,iBAAiB,GAAG,IAAI9C,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA1B;AACAO,MAAAA,iBAAiB,CAAC7B,OAAlB,CAA0BuB,OAA1B,CAAkCL,eAAlC,EAAmD,gFAAnD,EAAqIf,IAArI,CAA0I;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA1I;AAEA,YAAM0B,iBAAiB,GAAG,IAAI/C,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA1B;AACAQ,MAAAA,iBAAiB,CAAC9B,OAAlB,CAA0BuB,OAA1B,CAAkCL,eAAlC,EAAmD,gFAAnD,EAAqIf,IAArI,CAA0I;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA1I;AAEA,YAAM2B,mBAAmB,GAAG,IAAIhD,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA5B;AACAS,MAAAA,mBAAmB,CAAC/B,OAApB,CAA4BuB,OAA5B,CAAoCL,eAApC,EAAqD,gFAArD,EAAuIf,IAAvI,CAA4I;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA5I;AAEA,YAAM4B,iBAAiB,GAAG,IAAIjD,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA1B;AACAU,MAAAA,iBAAiB,CAAChC,OAAlB,CAA0BuB,OAA1B,CAAkCL,eAAlC,EAAmD,gFAAnD,EAAqIf,IAArI,CAA0I;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA1I;AAEA,YAAM6B,iBAAiB,GAAG,IAAIlD,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA1B;AACAW,MAAAA,iBAAiB,CAACjC,OAAlB,CAA0BuB,OAA1B,CAAkCL,eAAlC,EAAmD,gFAAnD,EAAqIf,IAArI,CAA0I;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA1I;AAEA,YAAM8B,iBAAiB,GAAG,IAAInD,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA1B;AACAY,MAAAA,iBAAiB,CAAClC,OAAlB,CAA0BuB,OAA1B,CAAkCL,eAAlC,EAAmD,gFAAnD,EAAqIf,IAArI,CAA0I;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA1I;AAEA,YAAM+B,mBAAmB,GAAG,IAAIpD,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA5B;AACAa,MAAAA,mBAAmB,CAACnC,OAApB,CAA4BuB,OAA5B,CAAoCL,eAApC,EAAqD,gFAArD,EAAuIf,IAAvI,CAA4I;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA5I;AAEA,YAAMgC,kBAAkB,GAAG,IAAIrD,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA3B;AACAc,MAAAA,kBAAkB,CAACpC,OAAnB,CAA2BuB,OAA3B,CAAmCL,eAAnC,EAAoD,gFAApD,EAAsIf,IAAtI,CAA2I;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA3I;AAEA,YAAMiC,iBAAiB,GAAG,IAAItD,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA1B;AACAe,MAAAA,iBAAiB,CAACrC,OAAlB,CAA0BuB,OAA1B,CAAkCL,eAAlC,EAAmD,gFAAnD,EAAqIf,IAArI,CAA0I;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA1I;AAEA,YAAMkC,kBAAkB,GAAG,IAAIvD,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA3B;AACAgB,MAAAA,kBAAkB,CAACtC,OAAnB,CAA2BuB,OAA3B,CAAmCL,eAAnC,EAAoD,gFAApD,EAAsIf,IAAtI,CAA2I;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA3I;AACD,KA9OkB;;AAAA,SAgPnBmC,YAhPmB,GAgPJ,YAAY;AACzB,YAAMC,KAAK,GAAG,4CAAd;AAEA,YAAMzD,IAAI,GAAG,IAAI3B,IAAJ,CAASyB,MAAM,CAACC,QAAhB,CAAb;AAEA,UAAI2D,WAAW,GAAG,KAAK/C,KAAL,CAAWgD,iBAA7B;AACA,UAAIC,mBAAmB,GAAG5D,IAAI,CAACc,KAAL,CAAWC,KAAX,CAAiB2C,WAAjB,EAA8B,OAA9B,CAA1B;AAEA,YAAM,KAAK/C,KAAL,CAAWkD,iBAAX,CAA6B5C,OAA7B,CAAqCuB,OAArC,CAA6C,4CAA7C,EAA2F,gDAA3F,EACLpB,IADK,CACA;AAACC,QAAAA,IAAI,EAAE,KAAKV,KAAL,CAAWW;AAAlB,OADA,CAAN;AAIA,UAAIwC,MAAM,GAAGF,mBAAmB,GAAG,EAAnC;AACA,UAAIG,OAAO,GAAGD,MAAM,CAACE,QAAP,EAAd;AAEA,YAAM,KAAKrD,KAAL,CAAWoB,YAAX,CAAwBd,OAAxB,CAAgCgD,yBAAhC,CAA0DF,OAA1D,EACJ3C,IADI,CACC;AACLC,QAAAA,IAAI,EAAE,KAAKV,KAAL,CAAWW,OADZ;AACqB9B,QAAAA,KAAK,EAAE;AAD5B,OADD,EAGH+B,IAHG,CAGE,SAHF,EAGcC,OAAD,IAAa;AAC9BzC,QAAAA,IAAI,CAAC,yBAAD,EAA4B,gCAA5B,EAA8D,SAA9D,CAAJ;AACAmB,QAAAA,OAAO,CAACC,GAAR,CAAYqB,OAAZ;AACD,OANK,EAOHC,KAPG,CAOIC,GAAD,IAAS;AACdxB,QAAAA,OAAO,CAACC,GAAR,CAAYuB,GAAZ;AACD,OATG,CAAN;AAWE,WAAKO,qBAAL;AACH,KA3QkB;;AAAA,SA6QnBiC,WA7QmB,GA6QL,YAAY;AACtB,YAAMT,KAAK,GAAG,4CAAd;AAEA,YAAMzD,IAAI,GAAG,IAAI3B,IAAJ,CAASyB,MAAM,CAACC,QAAhB,CAAb;AAEAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKQ,KAAL,CAAWkD,iBAAvB;AAEA,UAAIH,WAAW,GAAG,KAAK/C,KAAL,CAAWwD,gBAA7B;AACA,UAAIP,mBAAmB,GAAG5D,IAAI,CAACc,KAAL,CAAWC,KAAX,CAAiB2C,WAAjB,EAA8B,OAA9B,CAA1B;AAGA,YAAM,KAAK/C,KAAL,CAAWyD,gBAAX,CAA4BnD,OAA5B,CAAoCuB,OAApC,CAA4C,4CAA5C,EAA0F,gDAA1F,EACLpB,IADK,CACA;AAACC,QAAAA,IAAI,EAAE,KAAKV,KAAL,CAAWW;AAAlB,OADA,CAAN;AAGA,UAAIwC,MAAM,GAAGF,mBAAmB,GAAG,EAAnC;AACA,UAAIG,OAAO,GAAGD,MAAM,CAACE,QAAP,EAAd;AAEA,YAAM,KAAKrD,KAAL,CAAWK,oBAAX,CAAgCC,OAAhC,CAAwCoD,mBAAxC,CAA4DN,OAA5D,EACJ3C,IADI,CACC;AACLC,QAAAA,IAAI,EAAE,KAAKV,KAAL,CAAWW,OADZ;AACqB9B,QAAAA,KAAK,EAAE;AAD5B,OADD,EAGH+B,IAHG,CAGE,SAHF,EAGcC,OAAD,IAAa;AAC9BzC,QAAAA,IAAI,CAAC,yBAAD,EAA4B,gCAA5B,EAA8D,SAA9D,CAAJ;AACAmB,QAAAA,OAAO,CAACC,GAAR,CAAYqB,OAAZ;AACD,OANK,EAOHC,KAPG,CAOIC,GAAD,IAAS;AACdxB,QAAAA,OAAO,CAACC,GAAR,CAAYuB,GAAZ;AACD,OATG,CAAN;AAWE,WAAKE,oBAAL;AACL,KA1SkB;;AAAA,SA4SnB0C,eA5SmB,GA4SD,OAAOC,QAAP,EAAiBC,OAAjB,KAA6B;AAC7C,YAAMxE,IAAI,GAAGF,MAAM,CAACE,IAApB;AACA,YAAMyE,aAAa,GAAG,IAAIzE,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBnE,iBAAiB,CAACoE,GAAxC,EAA6C,4CAA7C,CAAtB;AAEA,UAAImC,IAAI,GAAG,EAAX;AACAA,MAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUF,OAAV;AACAE,MAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,4CAAV;AAEA,YAAMC,EAAE,GAAG,MAAMF,aAAa,CAACxD,OAAd,CAAsB2D,aAAtB,CAAoCL,QAApC,EAA8CG,IAA9C,EAAoDG,IAApD,EAAjB;AACA,aAAOF,EAAE,CAAC,CAAD,CAAT;AACD,KAtTkB;;AAAA,SAwTnB1C,qBAxTmB,GAwTK,YAAY;AAClC,YAAMjC,IAAI,GAAGF,MAAM,CAACE,IAApB;AAEA,YAAM8E,kBAAkB,GAAG,MAAM,KAAKnE,KAAL,CAAWyD,gBAAX,CAA4BnD,OAA5B,CAAoC8D,SAApC,CAA8C,KAAKpE,KAAL,CAAWW,OAAzD,EAAkEuD,IAAlE,EAAjC;AACA,YAAMG,eAAe,GAAGhF,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmBH,kBAAnB,EAAuC,OAAvC,CAAxB;AAEA,YAAMI,mBAAmB,GAAG,MAAM,KAAKvE,KAAL,CAAWkD,iBAAX,CAA6B5C,OAA7B,CAAqC8D,SAArC,CAA+C,KAAKpE,KAAL,CAAWW,OAA1D,EAAmEuD,IAAnE,EAAlC;AACA,YAAMM,gBAAgB,GAAGnF,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmBC,mBAAnB,EAAwC,OAAxC,CAAzB,CAPkC,CASlC;;AACA,YAAMpC,iBAAiB,GAAG,IAAI9C,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA1B;AACA,YAAM6C,kBAAkB,GAAG,MAAM,KAAKzE,KAAL,CAAWoB,YAAX,CAAwBd,OAAxB,CAAgCoE,UAAhC,CAA2C,KAAK1E,KAAL,CAAWW,OAAtD,EAA+DuD,IAA/D,EAAjC,CAXkC,CAYlC;;AACA,YAAMS,SAAS,GAAG,MAAM,KAAKC,sBAAL,CAA4BH,kBAA5B,EAAgD,4CAAhD,CAAxB;AACA,YAAMI,kBAAkB,GAAGxF,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmBK,SAAnB,EAA8B,OAA9B,CAA3B;AACA,YAAMG,eAAe,GAAGzF,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmBG,kBAAnB,EAAuC,OAAvC,CAAxB;AAEA,YAAMrC,iBAAiB,GAAG,IAAI/C,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA1B;AACA,YAAMmD,kBAAkB,GAAG,MAAM,KAAK/E,KAAL,CAAWoB,YAAX,CAAwBd,OAAxB,CAAgC0E,UAAhC,CAA2C,KAAKhF,KAAL,CAAWW,OAAtD,EAA+DuD,IAA/D,EAAjC,CAlBkC,CAmBlC;;AACA,YAAMe,SAAS,GAAG,MAAM,KAAKL,sBAAL,CAA4BG,kBAA5B,EAAgD,4CAAhD,CAAxB;AACA,YAAMG,kBAAkB,GAAG7F,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmBW,SAAnB,EAA8B,OAA9B,CAA3B;AACA,YAAME,eAAe,GAAG9F,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmBS,kBAAnB,EAAuC,OAAvC,CAAxB;AAEA,YAAM1C,mBAAmB,GAAG,IAAIhD,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA5B;AACA,YAAMwD,oBAAoB,GAAG,MAAM,KAAKpF,KAAL,CAAWoB,YAAX,CAAwBd,OAAxB,CAAgC+E,YAAhC,CAA6C,KAAKrF,KAAL,CAAWW,OAAxD,EAAiEuD,IAAjE,EAAnC,CAzBkC,CA0BlC;;AACA,YAAMoB,UAAU,GAAG,MAAM,KAAKV,sBAAL,CAA4BQ,oBAA5B,EAAkD,4CAAlD,CAAzB;AACA,YAAMG,oBAAoB,GAAGlG,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmBgB,UAAnB,EAA+B,OAA/B,CAA7B;AACA,YAAME,iBAAiB,GAAGnG,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmBc,oBAAnB,EAAyC,OAAzC,CAA1B;AAEA,YAAM9C,iBAAiB,GAAG,IAAIjD,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA1B;AACA,YAAM6D,kBAAkB,GAAG,MAAM,KAAKzF,KAAL,CAAWoB,YAAX,CAAwBd,OAAxB,CAAgCoF,UAAhC,CAA2C,KAAK1F,KAAL,CAAWW,OAAtD,EAA+DuD,IAA/D,EAAjC,CAhCkC,CAiClC;;AACA,YAAMyB,SAAS,GAAG,MAAM,KAAKf,sBAAL,CAA4Ba,kBAA5B,EAAgD,4CAAhD,CAAxB;AACA,YAAMG,kBAAkB,GAAGvG,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmBqB,SAAnB,EAA8B,OAA9B,CAA3B;AACA,YAAME,eAAe,GAAGxG,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmBmB,kBAAnB,EAAuC,OAAvC,CAAxB;AAEA,YAAMlD,iBAAiB,GAAG,IAAIlD,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA1B;AACA,YAAMkE,kBAAkB,GAAG,MAAM,KAAK9F,KAAL,CAAWoB,YAAX,CAAwBd,OAAxB,CAAgCyF,UAAhC,CAA2C,KAAK/F,KAAL,CAAWW,OAAtD,EAA+DuD,IAA/D,EAAjC,CAvCkC,CAwClC;;AACA,YAAM8B,SAAS,GAAG,MAAM,KAAKpB,sBAAL,CAA4BkB,kBAA5B,EAAgD,4CAAhD,CAAxB;AACA,YAAMG,kBAAkB,GAAG5G,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmB0B,SAAnB,EAA8B,OAA9B,CAA3B;AACA,YAAME,eAAe,GAAG7G,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmBwB,kBAAnB,EAAuC,OAAvC,CAAxB;AAEA,YAAMtD,iBAAiB,GAAG,IAAInD,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA1B;AACA,YAAMuE,kBAAkB,GAAG,MAAM,KAAKnG,KAAL,CAAWoB,YAAX,CAAwBd,OAAxB,CAAgC8F,UAAhC,CAA2C,KAAKpG,KAAL,CAAWW,OAAtD,EAA+DuD,IAA/D,EAAjC,CA9CkC,CA+ClC;;AACA,YAAMmC,SAAS,GAAG,MAAM,KAAKzB,sBAAL,CAA4BuB,kBAA5B,EAAgD,4CAAhD,CAAxB;AACA,YAAMG,kBAAkB,GAAGjH,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmB+B,SAAnB,EAA8B,OAA9B,CAA3B;AACA,YAAME,eAAe,GAAGlH,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmB6B,kBAAnB,EAAuC,OAAvC,CAAxB;AAEA,YAAM1D,mBAAmB,GAAG,IAAIpD,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA5B;AACA,YAAM4E,oBAAoB,GAAG,MAAM,KAAKxG,KAAL,CAAWoB,YAAX,CAAwBd,OAAxB,CAAgCmG,YAAhC,CAA6C,KAAKzG,KAAL,CAAWW,OAAxD,EAAiEuD,IAAjE,EAAnC,CArDkC,CAsDlC;;AACA,YAAMwC,WAAW,GAAG,MAAM,KAAK9B,sBAAL,CAA4B4B,oBAA5B,EAAkD,4CAAlD,CAA1B;AACA,YAAMG,oBAAoB,GAAGtH,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmBoC,WAAnB,EAAgC,OAAhC,CAA7B;AACA,YAAME,iBAAiB,GAAGvH,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmBkC,oBAAnB,EAAyC,OAAzC,CAA1B;AAEA,YAAM9D,kBAAkB,GAAG,IAAIrD,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA3B;AACA,YAAMiF,mBAAmB,GAAG,MAAM,KAAK7G,KAAL,CAAWoB,YAAX,CAAwBd,OAAxB,CAAgCwG,WAAhC,CAA4C,KAAK9G,KAAL,CAAWW,OAAvD,EAAgEuD,IAAhE,EAAlC,CA5DkC,CA6DlC;;AACA,YAAM6C,UAAU,GAAG,MAAM,KAAKnC,sBAAL,CAA4BiC,mBAA5B,EAAiD,4CAAjD,CAAzB;AACA,YAAMG,mBAAmB,GAAG3H,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmByC,UAAnB,EAA+B,OAA/B,CAA5B;AACA,YAAME,gBAAgB,GAAG5H,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmBuC,mBAAnB,EAAwC,OAAxC,CAAzB;AAEA,YAAMlE,iBAAiB,GAAG,IAAItD,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA1B;AACA,YAAMsF,kBAAkB,GAAG,MAAM,KAAKlH,KAAL,CAAWoB,YAAX,CAAwBd,OAAxB,CAAgC6G,UAAhC,CAA2C,KAAKnH,KAAL,CAAWW,OAAtD,EAA+DuD,IAA/D,EAAjC,CAnEkC,CAoElC;;AACA,YAAMkD,SAAS,GAAG,MAAM,KAAKxC,sBAAL,CAA4BsC,kBAA5B,EAAgD,4CAAhD,CAAxB;AACA,YAAMG,kBAAkB,GAAGhI,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmB8C,SAAnB,EAA8B,OAA9B,CAA3B;AACA,YAAME,eAAe,GAAGjI,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmB4C,kBAAnB,EAAuC,OAAvC,CAAxB;AAGA,YAAMtE,kBAAkB,GAAG,IAAIvD,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA3B;AACA,YAAM2F,mBAAmB,GAAG,MAAM,KAAKvH,KAAL,CAAWoB,YAAX,CAAwBd,OAAxB,CAAgCkH,WAAhC,CAA4C,KAAKxH,KAAL,CAAWW,OAAvD,EAAgEuD,IAAhE,EAAlC,CA3EkC,CA4ElC;;AACA,YAAMuD,UAAU,GAAG,MAAM,KAAK7C,sBAAL,CAA4B2C,mBAA5B,EAAiD,4CAAjD,CAAzB;AACA,YAAMG,mBAAmB,GAAGrI,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmBmD,UAAnB,EAA+B,OAA/B,CAA5B;AACA,YAAME,gBAAgB,GAAGtI,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmBiD,mBAAnB,EAAwC,OAAxC,CAAzB;AAEA,WAAKtI,QAAL,CAAc;AACZuF,QAAAA,gBADY;AAEZM,QAAAA,eAFY;AAEKK,QAAAA,eAFL;AAEsBK,QAAAA,iBAFtB;AAEyCK,QAAAA,eAFzC;AAE0DK,QAAAA,eAF1D;AAGZrB,QAAAA,kBAHY;AAGQK,QAAAA,kBAHR;AAG4BK,QAAAA,oBAH5B;AAGkDK,QAAAA,kBAHlD;AAGsEK,QAAAA,kBAHtE;AAIZM,QAAAA,eAJY;AAIKK,QAAAA,iBAJL;AAIwBK,QAAAA,gBAJxB;AAI0CK,QAAAA,eAJ1C;AAI2DK,QAAAA,gBAJ3D;AAKZrB,QAAAA,kBALY;AAKQK,QAAAA,oBALR;AAK8BK,QAAAA,mBAL9B;AAKmDK,QAAAA,kBALnD;AAKuEK,QAAAA;AALvE,OAAd;AAOD,KAhZkB;;AAAA,SAkZjBzG,oBAlZiB,GAkZM,YAAY;AACnC;AAEA,YAAM5B,IAAI,GAAGF,MAAM,CAACE,IAApB;AAEA,YAAM8E,kBAAkB,GAAG,MAAM,KAAKnE,KAAL,CAAWyD,gBAAX,CAA4BnD,OAA5B,CAAoC8D,SAApC,CAA8C,KAAKpE,KAAL,CAAWW,OAAzD,EAAkEuD,IAAlE,EAAjC;AACA,YAAMG,eAAe,GAAGhF,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmBH,kBAAnB,EAAuC,OAAvC,CAAxB;AAEA,YAAMyD,iBAAiB,GAAG,IAAIvI,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA1B;AACA,YAAMiG,kBAAkB,GAAG,MAAM,KAAK7H,KAAL,CAAWK,oBAAX,CAAgCC,OAAhC,CAAwCwH,UAAxC,CAAmD,KAAK9H,KAAL,CAAWW,OAA9D,EAAuEuD,IAAvE,EAAjC,CATmC,CAUnC;;AACA,YAAM6D,SAAS,GAAG,MAAM,KAAKnD,sBAAL,CAA4BiD,kBAA5B,EAAgD,4CAAhD,CAAxB;AACA,YAAMG,kBAAkB,GAAG3I,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmByD,SAAnB,EAA8B,OAA9B,CAA3B;AACA,YAAME,eAAe,GAAG5I,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmBuD,kBAAnB,EAAuC,OAAvC,CAAxB;AAEA,YAAMK,kBAAkB,GAAG,IAAI7I,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA3B;AACA,YAAMuG,mBAAmB,GAAG,MAAM,KAAKnI,KAAL,CAAWK,oBAAX,CAAgCC,OAAhC,CAAwC8H,WAAxC,CAAoD,KAAKpI,KAAL,CAAWW,OAA/D,EAAwEuD,IAAxE,EAAlC,CAhBmC,CAiBnC;;AACA,YAAMmE,UAAU,GAAG,MAAM,KAAKzD,sBAAL,CAA4BuD,mBAA5B,EAAiD,4CAAjD,CAAzB;AACA,YAAMG,mBAAmB,GAAGjJ,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmB+D,UAAnB,EAA+B,OAA/B,CAA5B;AACA,YAAME,gBAAgB,GAAGlJ,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmB6D,mBAAnB,EAAwC,OAAxC,CAAzB;AAEA,YAAMK,kBAAkB,GAAG,IAAInJ,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA3B;AACA,YAAM6G,mBAAmB,GAAG,MAAM,KAAKzI,KAAL,CAAWK,oBAAX,CAAgCC,OAAhC,CAAwCoI,WAAxC,CAAoD,KAAK1I,KAAL,CAAWW,OAA/D,EAAwEuD,IAAxE,EAAlC,CAvBmC,CAwBnC;;AACA,YAAMyE,UAAU,GAAG,MAAM,KAAK/D,sBAAL,CAA4B6D,mBAA5B,EAAiD,4CAAjD,CAAzB;AACA,YAAMG,mBAAmB,GAAGvJ,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmBqE,UAAnB,EAA+B,OAA/B,CAA5B;AACA,YAAME,gBAAgB,GAAGxJ,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmBmE,mBAAnB,EAAwC,OAAxC,CAAzB;AAEA,YAAMK,gBAAgB,GAAG,IAAIzJ,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAAzB;AACA,YAAMmH,iBAAiB,GAAG,MAAM,KAAK/I,KAAL,CAAWK,oBAAX,CAAgCC,OAAhC,CAAwC0I,SAAxC,CAAkD,KAAKhJ,KAAL,CAAWW,OAA7D,EAAsEuD,IAAtE,EAAhC,CA9BmC,CA+BnC;;AACA,YAAM+E,QAAQ,GAAG,MAAM,KAAKrE,sBAAL,CAA4BmE,iBAA5B,EAA+C,4CAA/C,CAAvB;AACA,YAAMG,iBAAiB,GAAG7J,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmB2E,QAAnB,EAA6B,OAA7B,CAA1B;AACA,YAAME,cAAc,GAAG9J,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmByE,iBAAnB,EAAsC,OAAtC,CAAvB;AAEA,YAAMK,mBAAmB,GAAG,IAAI/J,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBpE,IAAI,CAACqE,GAA3B,EAAgC,4CAAhC,CAA5B;AACA,YAAMyH,oBAAoB,GAAG,MAAM,KAAKrJ,KAAL,CAAWK,oBAAX,CAAgCC,OAAhC,CAAwCgJ,YAAxC,CAAqD,KAAKtJ,KAAL,CAAWW,OAAhE,EAAyEuD,IAAzE,EAAnC,CArCmC,CAsCnC;;AACA,YAAMqF,WAAW,GAAG,MAAM,KAAK3E,sBAAL,CAA4ByE,oBAA5B,EAAkD,4CAAlD,CAA1B;AACA,YAAMG,oBAAoB,GAAGnK,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmBiF,WAAnB,EAAgC,OAAhC,CAA7B;AACA,YAAME,iBAAiB,GAAGpK,IAAI,CAACc,KAAL,CAAWmE,OAAX,CAAmB+E,oBAAnB,EAAyC,OAAzC,CAA1B;AAGA,WAAKpK,QAAL,CAAc;AACZoF,QAAAA,eADY;AAEZ4D,QAAAA,eAFY;AAEKM,QAAAA,gBAFL;AAEuBM,QAAAA,gBAFvB;AAEyCM,QAAAA,cAFzC;AAEyDM,QAAAA,iBAFzD;AAGZzB,QAAAA,kBAHY;AAGQM,QAAAA,mBAHR;AAG6BM,QAAAA,mBAH7B;AAGkDM,QAAAA,iBAHlD;AAGqEM,QAAAA;AAHrE,OAAd;AAKD,KAnckB;;AAAA,SAqcnBE,OArcmB,GAqcT,YAAY;AACpB,YAAMC,OAAO,GAAG,MAAM,KAAK3J,KAAL,CAAWoB,YAAX,CAAwBd,OAAxB,CAAgCsJ,WAAhC,GAA8C1F,IAA9C,EAAtB;AACA,YAAM2F,IAAI,GAAGF,OAAO,CAACG,SAAR,GAAoBH,OAAO,CAACI,WAAzC;AACA,WAAK9K,QAAL,CAAc;AAAE4K,QAAAA;AAAF,OAAd;AACD,KAzckB;;AAEjB,SAAK7J,KAAL,GAAa;AACXW,MAAAA,OAAO,EAAE,EADE;AAEXS,MAAAA,YAAY,EAAE,IAFH;AAGXqC,MAAAA,gBAAgB,EAAE,IAHP;AAIXP,MAAAA,iBAAiB,EAAE,IAJR;AAKX7C,MAAAA,oBAAoB,EAAE,IALX;AAMXwD,MAAAA,OAAO,EAAE,EANE;AAOXpE,MAAAA,SAAS,EAAE,KAPA;AAQXuK,MAAAA,OAAO,EAAE,EARE;AASXC,MAAAA,MAAM,EAAE,EATG;AAWX9I,MAAAA,UAAU,EAAE,CAXD;AAYXlB,MAAAA,SAAS,EAAE,CAZA;AAcX+C,MAAAA,iBAAiB,EAAE,CAdR;AAeXQ,MAAAA,gBAAgB,EAAE,CAfP;AAiBX0G,MAAAA,WAAW,EAAE,CAjBF;AAkBXC,MAAAA,UAAU,EAAE,CAlBD;AAoBX9F,MAAAA,eAAe,EAAE,CApBN;AAqBXG,MAAAA,gBAAgB,EAAE,CArBP;AAuBXM,MAAAA,eAAe,EAAE,CAvBN;AAwBXK,MAAAA,eAAe,EAAE,CAxBN;AAyBXK,MAAAA,iBAAiB,EAAE,CAzBR;AA0BXK,MAAAA,eAAe,EAAE,CA1BN;AA2BXK,MAAAA,eAAe,EAAE,CA3BN;AA4BXK,MAAAA,eAAe,EAAE,CA5BN;AA6BXK,MAAAA,iBAAiB,EAAE,CA7BR;AA8BXK,MAAAA,gBAAgB,EAAE,CA9BP;AA+BXK,MAAAA,eAAe,EAAE,CA/BN;AAgCXK,MAAAA,gBAAgB,EAAE,CAhCP;AAkCX9C,MAAAA,kBAAkB,EAAE,CAlCT;AAmCXK,MAAAA,kBAAkB,EAAE,CAnCT;AAoCXK,MAAAA,oBAAoB,EAAE,CApCX;AAqCXK,MAAAA,kBAAkB,EAAE,CArCT;AAsCXK,MAAAA,kBAAkB,EAAE,CAtCT;AAuCXK,MAAAA,kBAAkB,EAAE,CAvCT;AAwCXK,MAAAA,oBAAoB,EAAE,CAxCX;AAyCXK,MAAAA,mBAAmB,EAAE,CAzCV;AA0CXK,MAAAA,kBAAkB,EAAE,CA1CT;AA2CXK,MAAAA,mBAAmB,EAAE,CA3CV;AA6CXO,MAAAA,eAAe,EAAE,CA7CN;AA8CXM,MAAAA,gBAAgB,EAAE,CA9CP;AA+CXM,MAAAA,gBAAgB,EAAE,CA/CP;AAgDXM,MAAAA,cAAc,EAAE,CAhDL;AAiDXM,MAAAA,iBAAiB,EAAE,CAjDR;AAkDXW,MAAAA,eAAe,EAAE,CAlDN;AAmDXC,MAAAA,gBAAgB,EAAE,CAnDP;AAoDXC,MAAAA,eAAe,EAAE,CApDN;AAqDXC,MAAAA,eAAe,EAAE,CArDN;AAsDXC,MAAAA,gBAAgB,EAAE,CAtDP;AAwDXxC,MAAAA,kBAAkB,EAAE,CAxDT;AAyDXM,MAAAA,mBAAmB,EAAE,CAzDV;AA0DXM,MAAAA,mBAAmB,EAAE,CA1DV;AA2DXM,MAAAA,iBAAiB,EAAE,CA3DR;AA4DXM,MAAAA,oBAAoB,EAAE,CA5DX;AA6DXiB,MAAAA,kBAAkB,EAAE,CA7DT;AA8DXC,MAAAA,mBAAmB,EAAE,CA9DV;AA+DXC,MAAAA,kBAAkB,EAAE,CA/DT;AAgEXC,MAAAA,kBAAkB,EAAE,CAhET;AAiEXC,MAAAA,mBAAmB,EAAE,CAjEV;AAmEXhB,MAAAA,IAAI,EAAE;AAnEK,KAAb;AAqED;;AAED,QAAMiB,iBAAN,GAA0B;AACxB,UAAM,KAAKC,QAAL,EAAN;AACA,UAAM,KAAKpL,kBAAL,EAAN;AACA,UAAM,KAAK2B,qBAAL,EAAN;AACA,UAAM,KAAKL,oBAAL,EAAN;AACA,UAAM,KAAKyI,OAAL,EAAN;AACAtL,IAAAA,IAAI,CAAC,+BAAD,CAAJ;AACD,GAlFyB,CAoF1B;;;AACA,QAAM2M,QAAN,GAAiB;AACf,UAAMC,QAAQ,GAAG,MAAMvN,sBAAsB,EAA7C,CADe,CAGf;;AACA,QAAIuN,QAAJ,EAAc;AACZzL,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAEAL,MAAAA,MAAM,CAACE,IAAP,GAAc,IAAI3B,IAAJ,CAASsN,QAAT,CAAd;AACD,KAJD,MAIO;AACLzL,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD;AACF;;AAED,QAAMG,kBAAN,GAA2B;AACzB,UAAMN,IAAI,GAAGF,MAAM,CAACE,IAApB;AACA,UAAM4L,QAAQ,GAAG,MAAM9L,MAAM,CAACE,IAAP,CAAYqC,GAAZ,CAAgBwJ,WAAhB,EAAvB;;AACA,QAAGD,QAAQ,CAAC,CAAD,CAAX,EAAgB;AACd,WAAKhM,QAAL,CAAc;AAAEQ,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD;;AACD,SAAKR,QAAL,CAAc;AAAE0B,MAAAA,OAAO,EAAEsK,QAAQ,CAAC,CAAD;AAAnB,KAAd;AACA,UAAM7J,YAAY,GAAG,IAAI/B,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBvE,SAAS,CAACwE,GAAhC,EAAqC,4CAArC,CAArB;AACA,UAAMvB,oBAAoB,GAAG,IAAIhB,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBrE,OAAO,CAACsE,GAA9B,EAAmC,4CAAnC,CAA7B;AACA,UAAM6B,gBAAgB,GAAG,IAAIpE,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBtE,UAAU,CAACuE,GAAjC,EAAsC,4CAAtC,CAAzB;AACA,UAAMsB,iBAAiB,GAAG,IAAI7D,IAAI,CAACqC,GAAL,CAASC,QAAb,CAAsBtE,UAAU,CAACuE,GAAjC,EAAsC,4CAAtC,CAA1B;AACA,SAAK3C,QAAL,CAAc;AAAEmC,MAAAA,YAAF;AAAgB8B,MAAAA,iBAAhB;AAAmC7C,MAAAA,oBAAnC;AAAyDoD,MAAAA;AAAzD,KAAd;AACD;;AA+VD0H,EAAAA,MAAM,GAAG;AACP,QAAIC,MAAJ;;AACA,QAAI,CAAC,KAAKpL,KAAL,CAAWP,SAAhB,EAA2B;AACzB2L,MAAAA,MAAM,GAAG,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,UAAZ;AAAwBC,UAAAA,GAAG,EAAE,MAA7B;AAAqCC,UAAAA,KAAK,EAAE;AAA5C,SAAf;AAAqE,QAAA,OAAO,EAAE,KAAKrM,aAAnF;AAAkG,QAAA,KAAK,EAAC,QAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACL,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAE,yBAAe;AAAjB,SAAd;AAAwC,QAAA,OAAO,EAAC,MAAhD;AAAuD,QAAA,IAAI,EAAC,MAA5D;AAAmE,QAAA,GAAG,EAAEsM,QAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,EAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFK,CAAT;AAID,KALD,MAKO;AACLJ,MAAAA,MAAM,GAAG;AAAG,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,UAAZ;AAAwBC,UAAAA,GAAG,EAAE,MAA7B;AAAqCC,UAAAA,KAAK,EAAE,MAA5C;AAAoDE,UAAAA,KAAK,EAAE;AAA3D,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAlF,OAAmG,KAAKzL,KAAL,CAAWW,OAA9G,CAAT;AACD;;AAED,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAExC,MAAZ;AAAoB,MAAA,IAAI,EAAC,QAAzB;AAAkC,MAAA,aAAa,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAKGiN,MALH,EAOE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,OAAO,EAAE,CAAnB;AAAsB,MAAA,KAAK,EAAE;AAAEM,QAAAA,MAAM,EAAE;AAAV,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAAEH,QAAAA,KAAK,EAAE;AAAT,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAG,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE,SAAT;AAAoB,uBAAe,MAAnC;AAA2C,sBAAc;AAAzD,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,kBADF,EAKE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EADF,EAGE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKvK,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEyK,QAAAA,KAAK,EAAE,OAAT;AAAkBE,QAAAA,OAAO,EAAE;AAA3B,OAAd;AAA8C,MAAA,QAAQ,MAAtD;AAAuD,MAAA,IAAI,EAAC,MAA5D;AAAmE,MAAA,WAAW,EAAC,sBAA/E;AAAsG,MAAA,IAAI,EAAC,YAA3G;AAAwH,MAAA,QAAQ,EAAE,KAAKnN,iBAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,IAAI,EAAC,QAA3B;AAAoC,MAAA,KAAK,EAAE;AAAEgN,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAHF,EAQE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAK9I,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAE8I,QAAAA,KAAK,EAAE,OAAT;AAAkBE,QAAAA,OAAO,EAAE;AAA3B,OAAd;AAA8C,MAAA,QAAQ,MAAtD;AAAuD,MAAA,IAAI,EAAC,MAA5D;AAAmE,MAAA,WAAW,EAAC,wBAA/E;AAAwG,MAAA,IAAI,EAAC,mBAA7G;AAAiI,MAAA,QAAQ,EAAE,KAAKnN,iBAAhJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,KAAK,EAAE;AAAEgN,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CARF,EAaE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE;AAAE,uBAAe,MAAjB;AAAyB,wBAAgB;AAAzC,OAA1B;AAA6E,MAAA,KAAK,EAAC,MAAnF;AAA0F,MAAA,MAAM,MAAhG;AAAiG,MAAA,UAAU,MAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,UAAP;AAAkB,MAAA,KAAK,EAAE;AAAEF,QAAAA,KAAK,EAAE;AAAT,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,KAAD,CAAO,UAAP;AAAkB,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE,oBAAC,KAAD,CAAO,UAAP;AAAkB,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHF,CADF,CADF,EASE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAWwE,gBAArD,CAFF,EAGE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEiH,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAWwE,gBAArD,CAHF,CADF,EAME,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEiH,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAW8E,eAArD,CAFF,EAGE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAE2G,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAW6E,kBAArD,CAHF,CANF,EAWE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAE4G,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAWmF,eAArD,CAFF,EAGE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEsG,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAWkF,kBAArD,CAHF,CAXF,EAgBE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEuG,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAWwF,iBAArD,CAFF,EAGE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEiG,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAWuF,oBAArD,CAHF,CAhBF,EAqBE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEkG,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAW6F,eAArD,CAFF,EAGE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAE4F,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAW4F,kBAArD,CAHF,CArBF,EA0BE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAE6F,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAWkG,eAArD,CAFF,EAGE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEuF,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAWiG,kBAArD,CAHF,CA1BF,EA+BE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEwF,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAWuG,eAArD,CAFF,EAGE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEkF,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAWsG,kBAArD,CAHF,CA/BF,EAoCE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEmF,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAW4G,iBAArD,CAFF,EAGE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAE6E,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAW2G,oBAArD,CAHF,CApCF,EAyCE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAE8E,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAWiH,gBAArD,CAFF,EAGE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEwE,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAWgH,mBAArD,CAHF,CAzCF,EA8CE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEyE,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAWsH,eAArD,CAFF,EAGE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEmE,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAWqH,kBAArD,CAHF,CA9CF,EAmDE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEoE,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAW2H,gBAArD,CAFF,EAGE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAE8D,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAW0H,mBAArD,CAHF,CAnDF,CATF,CAbF,CALF,CADF,CADF,CAFF,CADF,EAmGE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEiE,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAAEH,QAAAA,KAAK,EAAE;AAAT,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE,SAAT;AAAoB,uBAAe,MAAnC;AAA2C,sBAAc;AAAzD,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,2BADF,EAKE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EADF,EAGE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAK3L,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAE6L,QAAAA,KAAK,EAAE,OAAT;AAAkBE,QAAAA,OAAO,EAAE;AAA3B,OAAd;AAA8C,MAAA,QAAQ,MAAtD;AAAuD,MAAA,IAAI,EAAC,MAA5D;AAAmE,MAAA,WAAW,EAAC,sBAA/E;AAAsG,MAAA,IAAI,EAAC,WAA3G;AAAuH,MAAA,QAAQ,EAAE,KAAKnN,iBAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,IAAI,EAAC,QAA3B;AAAoC,MAAA,KAAK,EAAE;AAAEgN,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAHF,EAQE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKpI,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEoI,QAAAA,KAAK,EAAE,OAAT;AAAkBE,QAAAA,OAAO,EAAE;AAA3B,OAAd;AAA8C,MAAA,QAAQ,MAAtD;AAAuD,MAAA,IAAI,EAAC,MAA5D;AAAmE,MAAA,WAAW,EAAC,uBAA/E;AAAuG,MAAA,IAAI,EAAC,kBAA5G;AAA+H,MAAA,QAAQ,EAAE,KAAKnN,iBAA9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,KAAK,EAAE;AAAEgN,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CARF,EAaE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAE,uBAAe,MAAjB;AAAyB,wBAAgB;AAAzC,OAAd;AAAiE,MAAA,KAAK,EAAC,MAAvE;AAA8E,MAAA,MAAM,MAApF;AAAqF,MAAA,UAAU,MAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,UAAP;AAAkB,MAAA,KAAK,EAAE;AAAEF,QAAAA,KAAK,EAAE;AAAT,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,KAAD,CAAO,UAAP;AAAkB,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE,oBAAC,KAAD,CAAO,UAAP;AAAkB,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHF,CADF,CADF,EASE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAWqE,eAArD,CAFF,EAGE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEoH,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAWqE,eAArD,CAHF,CADF,EAME,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEoH,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAWiI,eAArD,CAFF,EAGE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEwD,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAWgI,kBAArD,CAHF,CANF,EAWE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEyD,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAWuI,gBAArD,CAFF,EAGE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEkD,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAWsI,mBAArD,CAHF,CAXF,EAgBE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEmD,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAW6I,gBAArD,CAFF,EAGE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAE4C,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAW4I,mBAArD,CAHF,CAhBF,EAqBE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAE6C,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAWmJ,cAArD,CAFF,EAGE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEsC,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAWkJ,iBAArD,CAHF,CArBF,EA0BE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEuC,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAWyJ,iBAArD,CAFF,EAGE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEgC,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKzL,KAAL,CAAWwJ,oBAArD,CAHF,CA1BF,CATF,CAbF,CALF,CADF,CADF,CADF,CAnGF,CADF,CAPF,CADF;AAyLD;;AAjpByB;;AAopB5B,eAAejL,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport IndexSwap from \"./abis/IndexSwap.json\";\nimport IndexToken from \"./abis/indexToken.json\";\nimport NFTSwap from \"./abis/NFTPortfolio.json\";\nimport IERC from \"./abis/IERC20.json\";\nimport pancakeSwapRouter from \"./abis/IPancakeRouter02.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Card, Form, Input, Image, Menu, Table } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport velvet from \"./velvet.png\";\nimport metamask from \"./metamask-fox.svg\";\nimport swal from 'sweetalert';\n\nimport \"./App.css\";\n\nconst axios = require('axios');\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      SwapContract: null,\n      NFTTokenContract: null,\n      DeFiTokenContract: null,\n      NFTPortfolioContract: null,\n      address: \"\",\n      connected: false,\n      mapDefi: [],\n      mapNft: [],\n\n      defiToMint: 0,\n      nftToMint: 0,\n\n      withdrawValueDefi: 0,\n      withdrawValueNFT: 0,\n\n      defiBalance: 0,\n      nftBalance: 0,\n\n      nftTokenBalance: 0,\n      defiTokenBalance: 0,\n\n      btcTokenBalance: 0,\n      ethTokenBalance: 0,\n      shibaTokenBalance: 0,\n      xrpTokenBalance: 0,\n      ltcTokenBalance: 0,\n      daiTokenBalance: 0,\n      makerTokenBalance: 0,\n      linkTokenBalance: 0,\n      uniTokenBalance: 0,\n      aaveTokenBalance: 0,\n\n      btcTokenBalanceBnb: 0,\n      ethTokenBalanceBnb: 0,\n      shibaTokenBalanceBnb: 0,\n      xrpTokenBalanceBnb: 0,\n      ltcTokenBalanceBnb: 0,\n      daiTokenBalanceBnb: 0,\n      makerTokenBalanceBnb: 0,\n      linkTokenBalanceBnb: 0,\n      uniTokenBalanceBnb: 0,\n      aaveTokenBalanceBnb: 0,\n\n      axsTokenBalance: 0,\n      racaTokenBalance: 0,\n      mboxTokenBalance: 0,\n      mcTokenBalance: 0,\n      aliceTokenBalance: 0,\n      xtzTokenBalance: 0,\n      galaTokenBalance: 0,\n      chzTokenBalance: 0,\n      enjTokenBalance: 0,\n      roseTokenBalance: 0,\n\n      axsTokenBalanceBnb: 0,\n      racaTokenBalanceBnb: 0,\n      mboxTokenBalanceBnb: 0,\n      mcTokenBalanceBnb: 0,\n      aliceTokenBalanceBnb: 0,\n      xtzTokenBalanceBnb: 0,\n      galaTokenBalanceBnb: 0,\n      chzTokenBalanceBnb: 0,\n      enjTokenBalanceBnb: 0,\n      roseTokenBalanceBnb: 0,\n\n      rate: 0\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n    await this.calcTokenBalancesDeFi();\n    await this.calcTokenBalancesNFT();\n    await this.getRate();\n    swal(\"This project is is beta stage\");\n  }\n\n  // first up is to detect ethereum provider\n  async loadWeb3() {\n    const provider = await detectEthereumProvider();\n\n    // modern browsers\n    if (provider) {\n      console.log('MetaMask is connected');\n\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await window.web3.eth.getAccounts();\n    if(accounts[0]) {\n      this.setState({ connected: true })\n    }\n    this.setState({ account: accounts[0]}) \n    const SwapContract = new web3.eth.Contract(IndexSwap.abi, \"0x380d2b6742AAD7ae97f199a109c1F81A34E1cb86\");\n    const NFTPortfolioContract = new web3.eth.Contract(NFTSwap.abi, \"0x40A367c5320440a1aa78aCBC5af0A017Ed1F3772\"); \n    const NFTTokenContract = new web3.eth.Contract(IndexToken.abi, \"0x16dBB234A9a595967DdC2ea1bb53379752f09Ad4\"); \n    const DeFiTokenContract = new web3.eth.Contract(IndexToken.abi, \"0x6E49456f284e3da7f1515eEE120E2706cab69fD5\");\n    this.setState({ SwapContract, DeFiTokenContract, NFTPortfolioContract, NFTTokenContract});\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  connectWallet = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n      console.log(\"Connected\");\n      this.setState({\n        connected: true\n      })\n\n    } else {\n      alert(\"Metamask not found\");\n    }\n\n    this.loadBlockchainData();\n    window.location.reload()\n  }\n\n  investNFT = async () => {\n    const web3 = new Web3(window.ethereum);\n    const v = this.state.nftToMint;\n    const valueInWei = web3.utils.toWei(v, 'ether');\n    console.log(this.state.NFTPortfolioContract.methods);\n    \n    const resp = await this.state.NFTPortfolioContract.methods.investInFundNFT().send({ from: this.state.account, value: valueInWei\n    }).once(\"receipt\", (receipt) => {\n      console.log(receipt);\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n    if (resp.status) {\n      swal(\"Investment successfull!\", `You invested ${v} BNB into the portfolio.`, \"success\");\n    } else {\n      swal(\"Investment failed!\");\n    }\n\n    this.calcTokenBalancesNFT();\n  }\n\n  investDeFi = async () => {\n    const web3 = new Web3(window.ethereum);    \n    const v = this.state.defiToMint;\n    const valueInWei = web3.utils.toWei(v, 'ether');\n    \n    const resp = await this.state.SwapContract.methods.investInFundDefi().send({ from: this.state.account, value: valueInWei })\n    .once(\"receipt\", (receipt) => {\n      console.log(receipt);\n\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", `You invested ${v} BNB into the portfolio.`, \"success\");\n        //window.location.reload();\n      } else {\n        swal(\"Investment failed!\");\n      }\n\n    this.calcTokenBalancesDeFi();\n\n  }\n\n  approveNFTTokens = async() => {\n    const web3 = new Web3(window.ethereum);\n    \n    const contractAddress = \"0x40A367c5320440a1aa78aCBC5af0A017Ed1F3772\"; \n\n    const aXSTokenConntract = new web3.eth.Contract(IERC.abi, \"0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0\");\n    await aXSTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const rACATokenConntract = new web3.eth.Contract(IERC.abi, \"0x12BB890508c125661E03b09EC06E404bc9289040\");\n    await rACATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const mBOXTokenConntract = new web3.eth.Contract(IERC.abi, \"0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377\");\n    await mBOXTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const mCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x949D48EcA67b17269629c7194F4b727d4Ef9E5d6\");\n    await mCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const aLICETokenConntract = new web3.eth.Contract(IERC.abi, \"0xAC51066d7bEC65Dc4589368da368b212745d63E8\");\n    await aLICETokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n  }\n\n  approveDeFiTokens = async() => {\n    const web3 = new Web3(window.ethereum);\n    \n    const contractAddress = \"0x380d2b6742AAD7ae97f199a109c1F81A34E1cb86\"; \n\n    const BTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c\");\n    BTCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const ETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\"); \n    ETHTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const SHIBATokenConntract = new web3.eth.Contract(IERC.abi, \"0x2859e4544C4bB03966803b044A93563Bd2D0DD4D\");\n    SHIBATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const XRPTokenConntract = new web3.eth.Contract(IERC.abi, \"0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE\");\n    XRPTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const LTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x4338665CBB7B2485A8855A139b75D5e34AB0DB94\");\n    LTCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const DAITokenConntract = new web3.eth.Contract(IERC.abi, \"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3\");\n    DAITokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const MAKERTokenConntract = new web3.eth.Contract(IERC.abi, \"0x5f0Da599BB2ccCfcf6Fdfd7D81743B6020864350\");\n    MAKERTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const LINKTokenConntract = new web3.eth.Contract(IERC.abi, \"0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD\");\n    LINKTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const UNITokenConntract = new web3.eth.Contract(IERC.abi, \"0xBf5140A22578168FD562DCcF235E5D43A02ce9B1\");\n    UNITokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const AAVETokenConntract = new web3.eth.Contract(IERC.abi, \"0xfb6115445Bff7b52FeB98650C87f44907E58f802\");\n    AAVETokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n  }\n\n  withdrawDeFi = async () => {\n    const vault = \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\";\n\n    const web3 = new Web3(window.ethereum);\n\n    var withdrawAmt = this.state.withdrawValueDefi;\n    var withdrawAmountInWei = web3.utils.toWei(withdrawAmt, 'ether');\n\n    await this.state.DeFiTokenContract.methods.approve(\"0x380d2b6742AAD7ae97f199a109c1F81A34E1cb86\", \"7787357773333787487837458347754874574837458374\")\n    .send({from: this.state.account});\n\n\n    var amount = withdrawAmountInWei / 10;\n    var sAmount = amount.toString();\n\n    await this.state.SwapContract.methods.withdrawFromFundTOPTokens(sAmount\n    ).send({\n      from: this.state.account, value: 0\n    }).once(\"receipt\", (receipt) => {\n      swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n      console.log(receipt);\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n\n      this.calcTokenBalancesDeFi();\n  }\n\n  withdrawNFT = async () => {\n      const vault = \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\";\n  \n      const web3 = new Web3(window.ethereum);\n  \n      console.log(this.state.DeFiTokenContract);\n  \n      var withdrawAmt = this.state.withdrawValueNFT;\n      var withdrawAmountInWei = web3.utils.toWei(withdrawAmt, 'ether');\n  \n  \n      await this.state.NFTTokenContract.methods.approve(\"0x40A367c5320440a1aa78aCBC5af0A017Ed1F3772\", \"7787357773333787487837458347754874574837458374\")\n      .send({from: this.state.account});\n  \n      var amount = withdrawAmountInWei / 10;\n      var sAmount = amount.toString();\n  \n      await this.state.NFTPortfolioContract.methods.withdrawFromFundNFT(sAmount\n      ).send({\n        from: this.state.account, value: 0\n      }).once(\"receipt\", (receipt) => {\n        swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n        console.log(receipt);\n      })\n        .catch((err) => {\n          console.log(err);\n        });\n\n        this.calcTokenBalancesNFT();\n  }\n\n  getExchangeRate = async (amountIn, address) => {\n    const web3 = window.web3;\n    const pancakeRouter = new web3.eth.Contract(pancakeSwapRouter.abi, \"0x10ED43C718714eb63d5aA57B78B54704E256024E\");\n\n    var path = [];\n    path[0] = address;\n    path[1] = \"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\";\n\n    const er = await pancakeRouter.methods.getAmountsOut(amountIn, path).call();\n    return er[1];\n  }\n\n  calcTokenBalancesDeFi = async () => {\n    const web3 = window.web3;\n\n    const nftTokenBalanceRes = await this.state.NFTTokenContract.methods.balanceOf(this.state.account).call();\n    const nftTokenBalance = web3.utils.fromWei(nftTokenBalanceRes, \"ether\");\n\n    const defiTokenBalanceRes = await this.state.DeFiTokenContract.methods.balanceOf(this.state.account).call();\n    const defiTokenBalance = web3.utils.fromWei(defiTokenBalanceRes, \"ether\");\n\n    // DeFi\n    const BTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c\");\n    const btcTokenBalanceRes = await this.state.SwapContract.methods.btcBalance(this.state.account).call();\n    //const btcTokenBalanceRes = await BTCTokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n    const helperBtc = await this.getExchangeRateMainnet(btcTokenBalanceRes, \"0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c\");\n    const btcTokenBalanceBnb = web3.utils.fromWei(helperBtc, \"ether\");\n    const btcTokenBalance = web3.utils.fromWei(btcTokenBalanceRes, \"ether\");\n\n    const ETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\");\n    const ethTokenBalanceRes = await this.state.SwapContract.methods.ethBalance(this.state.account).call();\n    //const ethTokenBalanceRes = await ETHTokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n    const helperEth = await this.getExchangeRateMainnet(ethTokenBalanceRes, \"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\");\n    const ethTokenBalanceBnb = web3.utils.fromWei(helperEth, \"ether\");\n    const ethTokenBalance = web3.utils.fromWei(ethTokenBalanceRes, \"ether\");\n\n    const SHIBATokenConntract = new web3.eth.Contract(IERC.abi, \"0x2859e4544C4bB03966803b044A93563Bd2D0DD4D\");\n    const shibaTokenBalanceRes = await this.state.SwapContract.methods.shibaBalance(this.state.account).call();\n    //const shibaTokenBalanceRes = await SHIBATokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n    const helperShib = await this.getExchangeRateMainnet(shibaTokenBalanceRes, \"0x2859e4544C4bB03966803b044A93563Bd2D0DD4D\");\n    const shibaTokenBalanceBnb = web3.utils.fromWei(helperShib, \"ether\");\n    const shibaTokenBalance = web3.utils.fromWei(shibaTokenBalanceRes, \"ether\");\n\n    const XRPTokenConntract = new web3.eth.Contract(IERC.abi, \"0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE\");\n    const xrpTokenBalanceRes = await this.state.SwapContract.methods.xrpBalance(this.state.account).call();\n    //const xrpTokenBalanceRes = await XRPTokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n    const helperXrp = await this.getExchangeRateMainnet(xrpTokenBalanceRes, \"0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE\");\n    const xrpTokenBalanceBnb = web3.utils.fromWei(helperXrp, \"ether\");\n    const xrpTokenBalance = web3.utils.fromWei(xrpTokenBalanceRes, \"ether\");\n\n    const LTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x4338665CBB7B2485A8855A139b75D5e34AB0DB94\");\n    const ltcTokenBalanceRes = await this.state.SwapContract.methods.ltcBalance(this.state.account).call();\n    //const ltcTokenBalanceRes = await LTCTokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n    const helperLtc = await this.getExchangeRateMainnet(ltcTokenBalanceRes, \"0x4338665CBB7B2485A8855A139b75D5e34AB0DB94\");\n    const ltcTokenBalanceBnb = web3.utils.fromWei(helperLtc, \"ether\");\n    const ltcTokenBalance = web3.utils.fromWei(ltcTokenBalanceRes, \"ether\");\n\n    const DAITokenConntract = new web3.eth.Contract(IERC.abi, \"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3\");\n    const daiTokenBalanceRes = await this.state.SwapContract.methods.daiBalance(this.state.account).call();\n    //const daiTokenBalanceRes = await DAITokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n    const helperDai = await this.getExchangeRateMainnet(daiTokenBalanceRes, \"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3\");\n    const daiTokenBalanceBnb = web3.utils.fromWei(helperDai, \"ether\");\n    const daiTokenBalance = web3.utils.fromWei(daiTokenBalanceRes, \"ether\");\n\n    const MAKERTokenConntract = new web3.eth.Contract(IERC.abi, \"0x5f0Da599BB2ccCfcf6Fdfd7D81743B6020864350\");\n    const makerTokenBalanceRes = await this.state.SwapContract.methods.makerBalance(this.state.account).call();\n    //const makerTokenBalanceRes = await MAKERTokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n    const helperMaker = await this.getExchangeRateMainnet(makerTokenBalanceRes, \"0x5f0Da599BB2ccCfcf6Fdfd7D81743B6020864350\");\n    const makerTokenBalanceBnb = web3.utils.fromWei(helperMaker, \"ether\");\n    const makerTokenBalance = web3.utils.fromWei(makerTokenBalanceRes, \"ether\");\n\n    const LINKTokenConntract = new web3.eth.Contract(IERC.abi, \"0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD\");\n    const linkTokenBalanceRes = await this.state.SwapContract.methods.linkBalance(this.state.account).call();\n    //const linkTokenBalanceRes = await LINKTokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n    const helperLink = await this.getExchangeRateMainnet(linkTokenBalanceRes, \"0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD\");\n    const linkTokenBalanceBnb = web3.utils.fromWei(helperLink, \"ether\");\n    const linkTokenBalance = web3.utils.fromWei(linkTokenBalanceRes, \"ether\");\n\n    const UNITokenConntract = new web3.eth.Contract(IERC.abi, \"0xBf5140A22578168FD562DCcF235E5D43A02ce9B1\");\n    const uniTokenBalanceRes = await this.state.SwapContract.methods.uniBalance(this.state.account).call();\n    //const uniTokenBalanceRes = await UNITokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n    const helperUni = await this.getExchangeRateMainnet(uniTokenBalanceRes, \"0xBf5140A22578168FD562DCcF235E5D43A02ce9B1\");\n    const uniTokenBalanceBnb = web3.utils.fromWei(helperUni, \"ether\");\n    const uniTokenBalance = web3.utils.fromWei(uniTokenBalanceRes, \"ether\");\n\n\n    const AAVETokenConntract = new web3.eth.Contract(IERC.abi, \"0xfb6115445Bff7b52FeB98650C87f44907E58f802\");\n    const aaveTokenBalanceRes = await this.state.SwapContract.methods.aaveBalance(this.state.account).call();\n    //const aaveTokenBalanceRes = await AAVETokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n    const helperAave = await this.getExchangeRateMainnet(aaveTokenBalanceRes, \"0xfb6115445Bff7b52FeB98650C87f44907E58f802\");\n    const aaveTokenBalanceBnb = web3.utils.fromWei(helperAave, \"ether\");\n    const aaveTokenBalance = web3.utils.fromWei(aaveTokenBalanceRes, \"ether\");\n\n    this.setState({\n      defiTokenBalance,\n      btcTokenBalance, ethTokenBalance, shibaTokenBalance, xrpTokenBalance, ltcTokenBalance,\n      btcTokenBalanceBnb, ethTokenBalanceBnb, shibaTokenBalanceBnb, xrpTokenBalanceBnb, ltcTokenBalanceBnb,\n      daiTokenBalance, makerTokenBalance, linkTokenBalance, uniTokenBalance, aaveTokenBalance,\n      daiTokenBalanceBnb, makerTokenBalanceBnb, linkTokenBalanceBnb, uniTokenBalanceBnb, aaveTokenBalanceBnb,\n    });\n  }\n\n    calcTokenBalancesNFT = async () => {\n    // NFT\n\n    const web3 = window.web3;\n\n    const nftTokenBalanceRes = await this.state.NFTTokenContract.methods.balanceOf(this.state.account).call();\n    const nftTokenBalance = web3.utils.fromWei(nftTokenBalanceRes, \"ether\");\n\n    const AXSTokenConntract = new web3.eth.Contract(IERC.abi, \"0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0\");\n    const axsTokenBalanceRes = await this.state.NFTPortfolioContract.methods.axsBalance(this.state.account).call();\n    //const axsTokenBalanceRes = await AXSTokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n    const helperAxs = await this.getExchangeRateMainnet(axsTokenBalanceRes, \"0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0\");\n    const axsTokenBalanceBnb = web3.utils.fromWei(helperAxs, \"ether\");\n    const axsTokenBalance = web3.utils.fromWei(axsTokenBalanceRes, \"ether\");\n\n    const RACATokenConntract = new web3.eth.Contract(IERC.abi, \"0x12BB890508c125661E03b09EC06E404bc9289040\");\n    const racaTokenBalanceRes = await this.state.NFTPortfolioContract.methods.racaBalance(this.state.account).call();\n    //const racaTokenBalanceRes = await RACATokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n    const helperRaca = await this.getExchangeRateMainnet(racaTokenBalanceRes, \"0x12BB890508c125661E03b09EC06E404bc9289040\");\n    const racaTokenBalanceBnb = web3.utils.fromWei(helperRaca, \"ether\");\n    const racaTokenBalance = web3.utils.fromWei(racaTokenBalanceRes, \"ether\");\n\n    const MBOXTokenConntract = new web3.eth.Contract(IERC.abi, \"0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377\");\n    const mboxTokenBalanceRes = await this.state.NFTPortfolioContract.methods.mboxBalance(this.state.account).call();\n    //const mboxTokenBalanceRes = await MBOXTokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n    const helperMbox = await this.getExchangeRateMainnet(mboxTokenBalanceRes, \"0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377\");\n    const mboxTokenBalanceBnb = web3.utils.fromWei(helperMbox, \"ether\");\n    const mboxTokenBalance = web3.utils.fromWei(mboxTokenBalanceRes, \"ether\");\n\n    const MCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x949D48EcA67b17269629c7194F4b727d4Ef9E5d6\");\n    const mcTokenBalanceRes = await this.state.NFTPortfolioContract.methods.mcBalance(this.state.account).call();\n    //const mcTokenBalanceRes = await MCTokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n    const helperMc = await this.getExchangeRateMainnet(mcTokenBalanceRes, \"0x949D48EcA67b17269629c7194F4b727d4Ef9E5d6\");\n    const mcTokenBalanceBnb = web3.utils.fromWei(helperMc, \"ether\");\n    const mcTokenBalance = web3.utils.fromWei(mcTokenBalanceRes, \"ether\");\n\n    const ALICETokenConntract = new web3.eth.Contract(IERC.abi, \"0xAC51066d7bEC65Dc4589368da368b212745d63E8\");\n    const aliceTokenBalanceRes = await this.state.NFTPortfolioContract.methods.aliceBalance(this.state.account).call();\n    //const aliceTokenBalanceRes = await ALICETokenConntract.methods.balanceOf(\"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\").call();\n    const helperAlice = await this.getExchangeRateMainnet(aliceTokenBalanceRes, \"0xAC51066d7bEC65Dc4589368da368b212745d63E8\");\n    const aliceTokenBalanceBnb = web3.utils.fromWei(helperAlice, \"ether\");\n    const aliceTokenBalance = web3.utils.fromWei(aliceTokenBalanceRes, \"ether\");\n   \n\n    this.setState({\n      nftTokenBalance,\n      axsTokenBalance, racaTokenBalance, mboxTokenBalance, mcTokenBalance, aliceTokenBalance,\n      axsTokenBalanceBnb, racaTokenBalanceBnb, mboxTokenBalanceBnb, mcTokenBalanceBnb, aliceTokenBalanceBnb,\n    });\n  }\n\n  getRate = async () => {\n    const rateObj = await this.state.SwapContract.methods.currentRate().call();\n    const rate = rateObj.numerator / rateObj.denominator;\n    this.setState({ rate });\n  }\n\n  render() {\n    let button;\n    if (!this.state.connected) {\n      button = <Button style={{ position: \"absolute\", top: \"30px\", right: \"20px\" }} onClick={this.connectWallet} color=\"orange\">\n          <Image style={{ \"padding-top\": \"7px\" }} floated=\"left\" size=\"mini\" src={metamask} />\n          <p>Connect to MetaMask</p>\n        </Button>\n    } else {\n      button = <p style={{ position: \"absolute\", top: \"90px\", right: \"20px\", color: \"#C0C0C0\" }}><b>Account:</b> {this.state.account}</p>\n    }\n\n    return (\n      <div className=\"App\">\n        <br></br>\n\n        <Image src={velvet} size=\"medium\" verticalAlign='middle'></Image>\n\n        {button}\n\n        <Grid divided='vertically'>\n          <Grid.Row columns={2} style={{ margin: \"20px\" }}>\n            <Grid.Column>\n\n              <Card.Group>\n                <Card style={{ width: \"900px\" }}>\n                  <Card.Content style={{ background: \"#406ccd\" }}>\n                    <Card.Header style={{ color: \"white\" }}>\n                    <p style={{ color: \"#C0C0C0\", \"font-weight\": \"bold\", \"text-align\": \"right\" }}>APY: 12%</p>\n                      Top 10 Tokens\n                      </Card.Header>\n                    <Card.Description>\n                      <p style={{ color: \"#C0C0C0\" }}>Rate: In return of investing 1 BNB you will receive 1 Top10 Token.</p>\n\n                      <Form onSubmit={this.investDeFi}>\n                        <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to create\" name=\"defiToMint\" onChange={this.handleInputChange}></Input>\n                        <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\", width: \"150px\" }}>Create</Button>\n                      </Form>\n\n                      <Form onSubmit={this.withdrawDeFi}>\n                        <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"TOP15 amount to redeem\" name=\"withdrawValueDefi\" onChange={this.handleInputChange}></Input>\n                        <Button color=\"green\" style={{ margin: \"20px\", width: \"150px\" }}>Redeem</Button>\n                      </Form>\n\n                      <Table role=\"grid\" style={{ \"margin-left\": \"auto\", \"margin-right\": \"auto\" }} basic='very' celled collapsing>\n                        <Table.Header>\n                          <Table.Row>\n                            <Table.HeaderCell style={{ color: \"white\" }}>Token</Table.HeaderCell>\n                            <Table.HeaderCell style={{ color: \"white\" }}>Balance</Table.HeaderCell>\n                            <Table.HeaderCell style={{ color: \"white\" }}>Balance in BUSD</Table.HeaderCell>\n                          </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Top10 Token</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.defiTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.defiTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Bitcoin (BTC)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.btcTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.btcTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Ethereum (ETH)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.ethTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.ethTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Shiba Ibu (SHIB)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.shibaTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.shibaTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Ripple (XRP)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.xrpTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.xrpTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Litecoin (LTC)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.ltcTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.ltcTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Dai (DAI)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.daiTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.daiTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Maker (MKR)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.makerTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.makerTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Chainlink (LINK)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.linkTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.linkTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Uniswap (UNI)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.uniTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.uniTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Aave (AAVE)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.aaveTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.aaveTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n\n                        \n                        </Table.Body>\n                      </Table>\n\n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n            </Grid.Column>\n\n            <Grid.Column>\n              <Card.Group>\n                <Card style={{ width: \"900px\" }}>\n                  <Card.Content style={{ background: \"#406ccd\" }}>\n                    <Card.Header style={{ color: \"white\" }}>\n                      <p style={{ color: \"#C0C0C0\", \"font-weight\": \"bold\", \"text-align\": \"right\" }}>APY: 8%</p>\n                      Top 5 Metaverse Tokens\n                      </Card.Header>\n                    <Card.Description>\n                      <p style={{ color: \"#C0C0C0\" }}>Rate: In return of investing 1 BNB you will receive 1 META Token.</p>\n\n                      <Form onSubmit={this.investNFT}>\n                        <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to create\" name=\"nftToMint\" onChange={this.handleInputChange}></Input>\n                        <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\", width: \"150px\" }}>Create</Button>\n                      </Form>\n\n                      <Form onSubmit={this.withdrawNFT}>\n                        <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"META amount to redeem\" name=\"withdrawValueNFT\" onChange={this.handleInputChange}></Input>\n                        <Button color=\"green\" style={{ margin: \"20px\", width: \"150px\" }}>Redeem</Button>\n                      </Form>\n\n                      <Table style={{ \"margin-left\": \"auto\", \"margin-right\": \"auto\" }} basic='very' celled collapsing>\n                        <Table.Header>\n                          <Table.Row>\n                            <Table.HeaderCell style={{ color: \"white\" }}>Token</Table.HeaderCell>\n                            <Table.HeaderCell style={{ color: \"white\" }}>Balance</Table.HeaderCell>\n                            <Table.HeaderCell style={{ color: \"white\" }}>Balance in BUSD</Table.HeaderCell>\n                          </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body >\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Metaverse Token</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.nftTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.nftTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Axie Infinity (AXS)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.axsTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.axsTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Radio Caca (RACA)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.racaTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.racaTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>MOBOX (MBOX)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.mboxTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.mboxTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Merit Circle (MC)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.mcTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.mcTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>MyNeighborAlice (ALICE)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.aliceTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.aliceTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n\n                        </Table.Body>\n                      </Table>\n\n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n\n            </Grid.Column>\n           \n      \n          </Grid.Row>\n        </Grid>\n      </div >\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}